{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/casa/casa-create/casa-create.component.css","webpack:///./src/app/casa/casa-create/casa-create.component.html","webpack:///./src/app/casa/casa-create/casa-create.component.ts","webpack:///./src/app/casa/casa-detail/casa-detail.component.css","webpack:///./src/app/casa/casa-detail/casa-detail.component.html","webpack:///./src/app/casa/casa-detail/casa-detail.component.ts","webpack:///./src/app/casa/casa-edit/casa-edit.component.css","webpack:///./src/app/casa/casa-edit/casa-edit.component.html","webpack:///./src/app/casa/casa-edit/casa-edit.component.ts","webpack:///./src/app/casa/casa-list/casa-list.component.css","webpack:///./src/app/casa/casa-list/casa-list.component.html","webpack:///./src/app/casa/casa-list/casa-list.component.ts","webpack:///./src/app/casa/casa.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/endereco/endereco-create/endereco-create.component.css","webpack:///./src/app/endereco/endereco-create/endereco-create.component.html","webpack:///./src/app/endereco/endereco-create/endereco-create.component.ts","webpack:///./src/app/endereco/endereco-detail/endereco-detail.component.css","webpack:///./src/app/endereco/endereco-detail/endereco-detail.component.html","webpack:///./src/app/endereco/endereco-detail/endereco-detail.component.ts","webpack:///./src/app/endereco/endereco-edit/endereco-edit.component.css","webpack:///./src/app/endereco/endereco-edit/endereco-edit.component.html","webpack:///./src/app/endereco/endereco-edit/endereco-edit.component.ts","webpack:///./src/app/endereco/endereco-list/endereco-list.component.css","webpack:///./src/app/endereco/endereco-list/endereco-list.component.html","webpack:///./src/app/endereco/endereco-list/endereco-list.component.ts","webpack:///./src/app/endereco/endereco.service.ts","webpack:///./src/app/inicio/inicio.component.css","webpack:///./src/app/inicio/inicio.component.html","webpack:///./src/app/inicio/inicio.component.ts","webpack:///./src/app/passagemaerea/passagemaerea-create/passagemaerea-create.component.css","webpack:///./src/app/passagemaerea/passagemaerea-create/passagemaerea-create.component.html","webpack:///./src/app/passagemaerea/passagemaerea-create/passagemaerea-create.component.ts","webpack:///./src/app/passagemaerea/passagemaerea-detail/passagemaerea-detail.component.css","webpack:///./src/app/passagemaerea/passagemaerea-detail/passagemaerea-detail.component.html","webpack:///./src/app/passagemaerea/passagemaerea-detail/passagemaerea-detail.component.ts","webpack:///./src/app/passagemaerea/passagemaerea-edit/passagemaerea-edit.component.css","webpack:///./src/app/passagemaerea/passagemaerea-edit/passagemaerea-edit.component.html","webpack:///./src/app/passagemaerea/passagemaerea-edit/passagemaerea-edit.component.ts","webpack:///./src/app/passagemaerea/passagemaerea-list/passagemaerea-list.component.css","webpack:///./src/app/passagemaerea/passagemaerea-list/passagemaerea-list.component.html","webpack:///./src/app/passagemaerea/passagemaerea-list/passagemaerea-list.component.ts","webpack:///./src/app/passagemaerea/passagemaerea.service.ts","webpack:///./src/app/reserva/reserva-create/reserva-create.component.css","webpack:///./src/app/reserva/reserva-create/reserva-create.component.html","webpack:///./src/app/reserva/reserva-create/reserva-create.component.ts","webpack:///./src/app/reserva/reserva-detail/reserva-detail.component.css","webpack:///./src/app/reserva/reserva-detail/reserva-detail.component.html","webpack:///./src/app/reserva/reserva-detail/reserva-detail.component.ts","webpack:///./src/app/reserva/reserva-edit/reserva-edit.component.css","webpack:///./src/app/reserva/reserva-edit/reserva-edit.component.html","webpack:///./src/app/reserva/reserva-edit/reserva-edit.component.ts","webpack:///./src/app/reserva/reserva-list/reserva-list.component.css","webpack:///./src/app/reserva/reserva-list/reserva-list.component.html","webpack:///./src/app/reserva/reserva-list/reserva-list.component.ts","webpack:///./src/app/reserva/reserva.service.ts","webpack:///./src/app/voo/voo-create/voo-create.component.css","webpack:///./src/app/voo/voo-create/voo-create.component.html","webpack:///./src/app/voo/voo-create/voo-create.component.ts","webpack:///./src/app/voo/voo-detail/voo-detail.component.css","webpack:///./src/app/voo/voo-detail/voo-detail.component.html","webpack:///./src/app/voo/voo-detail/voo-detail.component.ts","webpack:///./src/app/voo/voo-edit/voo-edit.component.css","webpack:///./src/app/voo/voo-edit/voo-edit.component.html","webpack:///./src/app/voo/voo-edit/voo-edit.component.ts","webpack:///./src/app/voo/voo-list/voo-list.component.css","webpack:///./src/app/voo/voo-list/voo-list.component.html","webpack:///./src/app/voo/voo-list/voo-list.component.ts","webpack:///./src/app/voo/voo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n<app-dashboard></app-dashboard>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { EnderecoListComponent } from './endereco/endereco-list/endereco-list.component';\nimport { EnderecoCreateComponent } from './endereco/endereco-create/endereco-create.component';\nimport { EnderecoDetailComponent } from './endereco/endereco-detail/endereco-detail.component';\nimport { EnderecoEditComponent } from './endereco/endereco-edit/endereco-edit.component';\n\nimport { InicioComponent } from './inicio/inicio.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\n\nimport { CasaListComponent } from './casa/casa-list/casa-list.component';\nimport { CasaCreateComponent } from './casa/casa-create/casa-create.component';\nimport { CasaDetailComponent } from './casa/casa-detail/casa-detail.component';\nimport { CasaEditComponent } from './casa/casa-edit/casa-edit.component';\n\nimport { VooListComponent } from './voo/voo-list/voo-list.component';\nimport { VooCreateComponent } from './voo/voo-create/voo-create.component';\nimport { VooDetailComponent } from './voo/voo-detail/voo-detail.component';\nimport { VooEditComponent } from './voo/voo-edit/voo-edit.component';\n\nimport { ReservaListComponent } from './reserva/reserva-list/reserva-list.component';\nimport { ReservaCreateComponent } from './reserva/reserva-create/reserva-create.component';\nimport { ReservaDetailComponent } from './reserva/reserva-detail/reserva-detail.component';\nimport { ReservaEditComponent } from './reserva/reserva-edit/reserva-edit.component';\n\nimport { PassagemAereaListComponent } from './passagemaerea/passagemaerea-list/passagemaerea-list.component';\nimport { PassagemAereaCreateComponent } from './passagemaerea/passagemaerea-create/passagemaerea-create.component';\nimport { PassagemAereaDetailComponent } from './passagemaerea/passagemaerea-detail/passagemaerea-detail.component';\nimport { PassagemAereaEditComponent } from './passagemaerea/passagemaerea-edit/passagemaerea-edit.component';\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  //novos\n  MatToolbarModule,  \n  MatSidenavModule, \n  MatGridListModule,  \n  MatMenuModule} from \"@angular/material\";\n\nimport {MatRadioModule} from '@angular/material/radio';  \nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatListModule} from '@angular/material/list';\nimport {ListboxModule} from 'primeng/listbox';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {ButtonModule} from 'primeng/button';\nimport {AccordionModule} from 'primeng/accordion'; \nimport {MatDatepickerModule } from '@angular/material/datepicker';\nimport{MatNativeDateModule } from '@angular/material';\nimport {CalendarModule} from 'primeng/calendar';\n\n\nconst appRoutes: Routes = [\n\n  { path: '',\n    redirectTo: '/inicio',\n    pathMatch: 'full'\n  },\n  { path: 'inicio',\n    component: InicioComponent,\n    data: { title: 'Inicio' }\n  },\n  {\n    path: 'enderecos',\n    component: EnderecoListComponent,\n    data: { title: 'Endereco List' }\n  },\n  {\n    path: 'inicio',\n    component: InicioComponent,\n    data: { title: 'Inicio' }\n  },\n  {\n    path: 'endereco-create',\n    component: EnderecoCreateComponent,\n    data: { title: 'Create Endereco' }\n  },\n  {\n    path: 'endereco-edit/:id',\n    component: EnderecoEditComponent,\n    data: { title: 'Edit Endereco' }\n  },\n  {\n    path: 'endereco-details/:id',\n    component: EnderecoDetailComponent,\n    data: { title: 'Endereco Details' }\n  },\n  {\n    path: 'casa-create',\n    component: CasaCreateComponent,\n    data: { title: 'Create Casa' }\n  },\n  {\n    path: 'casas',\n    component: CasaListComponent,\n    data: { title: 'Casa List' }\n  },\n  {\n    path: 'casa-details/:id',\n    component: CasaDetailComponent,\n    data: { title: 'Casa Details' }\n  },\n  {    \n    path: 'casa-edit/:id',\n    component: CasaEditComponent,\n    data: { title: 'Edit Casa'  }\n  },\n  {\n    path: 'voo-create',\n    component: VooCreateComponent,\n    data: { title: 'Create Voo' }\n  },\n  {\n    path: 'voos',\n    component: VooListComponent,\n    data: { title: 'Voo List' }\n  },\n  {\n    path: 'voo-details/:id',\n    component: VooDetailComponent,\n    data: { title: 'Voo Details' }\n  },\n  {    \n    path: 'voo-edit/:id',\n    component: VooEditComponent,\n    data: { title: 'Edit Voo'  }\n  },\n  {\n    path: 'reserva-create',\n    component: ReservaCreateComponent,\n    data: { title: 'Create Reserva' }\n  },\n  {\n    path: 'reservas',\n    component: ReservaListComponent,\n    data: { title: 'Reserva List' }\n  },\n  {\n    path: 'reserva-details/:id',\n    component: ReservaDetailComponent,\n    data: { title: 'Reserva Details' }\n  },\n  {    \n    path: 'reserva-edit/:id',\n    component: ReservaEditComponent,\n    data: { title: 'Edit Reserva'  }\n  },\n  {\n    path: 'passagemaerea-create',\n    component: PassagemAereaCreateComponent,\n    data: { title: 'Create Passagem Aerea' }\n  },\n  {\n    path: 'passagensaereas',\n    component: PassagemAereaListComponent,\n    data: { title: 'Passagem Aerea List' }\n  },\n  {\n    path: 'passagemaerea-details/:id',\n    component: PassagemAereaDetailComponent,\n    data: { title: 'Passagem Aerea Details' }\n  },\n  {    \n    path: 'passagemaerea-edit/:id',\n    component: PassagemAereaEditComponent,\n    data: { title: 'Edit Passagem Aerea'  }\n  }\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EnderecoListComponent,\n    InicioComponent,\n    DashboardComponent,\n    EnderecoCreateComponent,\n    EnderecoDetailComponent,\n    EnderecoEditComponent,\n    CasaListComponent,\n    CasaCreateComponent,\n    CasaDetailComponent,\n    CasaEditComponent,\n    VooListComponent,\n    VooCreateComponent,\n    VooDetailComponent,\n    VooEditComponent,\n    ReservaListComponent,\n    ReservaCreateComponent,\n    ReservaDetailComponent,\n    ReservaEditComponent,\n    PassagemAereaListComponent,\n    PassagemAereaCreateComponent,\n    PassagemAereaDetailComponent,\n    PassagemAereaEditComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatListModule,\n    ListboxModule,\n    DropdownModule,\n    //novos\n    MatToolbarModule,  \n    MatSidenavModule, \n    MatGridListModule,  \n    MatMenuModule,\n    ButtonModule,\n    AccordionModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    CalendarModule\n  ],\n  providers: [\n    MatDatepickerModule, \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"casaForm\\\" (ngSubmit)=\\\"onFormSubmit(casaForm.value)\\\">    \\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Quartos\\\" formControlName=\\\"quartos\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('quartos').valid && casaForm.get('quartos').touched\\\">Quantidade de Quartos</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Suites\\\" formControlName=\\\"suites\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('suites').valid && casaForm.get('suites').touched\\\">Quantidade de Suítes</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sala de estar\\\" formControlName=\\\"sala_estar\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('sala_estar').valid && casaForm.get('sala_estar').touched\\\">Quantidade de Salas de Estar</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Vagas\\\" formControlName=\\\"vagas\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('vagas').valid && casaForm.get('vagas').touched\\\">Quantidade de Vagas</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('area').valid && casaForm.get('area').touched\\\">Área (em metros quadrados)</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Valor do aluguel\\\" formControlName=\\\"valoraluguel\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('valoraluguel').valid && casaForm.get('valoraluguel').touched\\\">Valor do aluguel</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Descricao\\\" formControlName=\\\"descricao\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!casaForm.get('descricao').valid && casaForm.get('descricao').touched\\\">Descrição</span>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Rua\\\" formControlName=\\\"rua\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error>\\n                  <span *ngIf=\\\"!casaForm.get('rua').valid && casaForm.get('rua').touched\\\">Rua</span>\\n                </mat-error>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Número\\\" formControlName=\\\"numero\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error>\\n                  <span *ngIf=\\\"!casaForm.get('numero').valid && casaForm.get('numero').touched\\\">Número</span>\\n                </mat-error>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field>\\n                <mat-label>Bairro</mat-label>\\n                <mat-select formControlName=\\\"endereco\\\">\\n                  <mat-option  *ngFor=\\\"let endereco of enderecos\\\" [value]=\\\"endereco\\\">\\n                    {{endereco.bairro}}\\n                    -\\n                    {{endereco.cidade}}  \\n                    ({{endereco.siglaestado}})       \\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n\\n            <mat-checkbox (click)='toggleDisable()'>Outro: </mat-checkbox> \\n                        \\n            <input [disabled]='disableTextbox'>\\n          \\n        </mat-grid-tile>\\n    </mat-grid-list>\\n    <mat-checkbox formControlName=\\\"armario_embutido\\\">Armário Embutido</mat-checkbox>   \\n\\n    \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!casaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\\n<!--\\n  <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Outro: </mat-checkbox>      \\n            <mat-checkbox class=\\\"example-margin\\\" [labelPosition]=\\\"labelPosition\\\" [disabled]=\\\"disabled\\\"> I'm a checkbox </mat-checkbox>\\n         \\n-->\\n\\n\\n\\n    \\n      \\n       \\n    \\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CasaService } from '../casa.service';\n\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport {Endereco} from '../../../../models/Endereco';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\nexport class Page<T> {\n\n  totalElements: number;\n  content: T[];\n  last: boolean;\n\n}\n@Component({\n  selector: 'app-casa-create',\n  templateUrl: './casa-create.component.html',\n  styleUrls: ['./casa-create.component.css']\n})\n\nexport class CasaCreateComponent implements OnInit {\n\n  checked = false;\n  indeterminate = false;\n  labelPosition = 'after';\n  disabled = false;\n\n  //enderecos:Endereco[];\n  enderecos:any;\n  casaForm: FormGroup;\n  enableForm: FormGroup;\n  quartos: Number;\n  suites: Number;\n  sala_estar: Number;\n  vagas:Number;\n  area:Number;\n  valoraluguel:Number;\n  armario_embutido:Boolean;\n  descrição:String;\n  rua:String;\n  numero:String;\n  \n  endereco:{\n    bairro:String,\n    cidade:String,\n    estado:String,\n  }\n\n  disableTextbox =  true;\n  toggleDisable() {\n    this.disableTextbox = !this.disableTextbox;\n  }\n\n  @Input() outrobairro: String;\n\n  constructor(private router: Router, private casaService: CasaService,\n     private formBuilder: FormBuilder,private enderecoService:EnderecoService) { \n      //this.findByNomeEndereco();\n      //this.findByEndereco();\n      \n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n      //console.log(\"End\"+this.enderecos);\n     }\n\n  ngOnInit() {\n    //this.disableTextbox=false;\n    this.casaForm = this.formBuilder.group({\n      'quartos' : [null, Validators.required],\n      'suites' : [null, Validators.required],\n      'sala_estar' : [null, Validators.required],\n      'vagas' : [null, Validators.required],\n      'area' : [null, Validators.required],\n      'armario_embutido' : [null, Validators],\n      'descricao' : [null, Validators.required],\n      'valoraluguel' : [null, Validators.required],\n      'endereco' : [null, Validators],\n      'numero' : [null, Validators.required],\n      'rua' : [null, Validators.required],\n      'outrobairro' : [null, Validators]\n    });\n\n    \n\n  }\n  findByEndereco(){\n  this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(\"Endereco\"+res);\n        this.enderecos = res;\n      }, err => {\n        console.log(\"Erro\"+err);\n      });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.casaService.postCasa(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/casa-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-content>\\n    <dl>\\n      <dt>Qtd. quartos: {{casa.quartos}}</dt>\\n      <dt>Qtd. suítes: {{casa.suites}}</dt>\\n      <dt>Qtd. salas de estar: {{casa.sala_estar}}</dt>\\n      <dt>Nro de vagas na garagem: {{casa.vagas}}</dt>\\n      <dt>Área (em metros quadrados): {{casa.area}}</dt>\\n      <dt>Possui armário embutido: {{getBoolValue(casa.armario_embutido)}}</dt>      \\n      <dt>Descrição: </dt>\\n      <dd>{{casa.descricao}}</dd>\\n      <dt>Endereço Completo:</dt>\\n      <dt>{{casa.rua}},{{casa.numero}}</dt>\\n      <dt>Bairro: {{casa.endereco.bairro}}</dt>\\n      <dt>Cidade: {{casa.endereco.cidade}}-{{casa.endereco.siglaestado}}</dt>\\n      <dt>Valor do aluguel: R$ {{casa.valoraluguel}}</dt>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casa-edit', casa._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteCasa(casa._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CasaService } from '../casa.service';\n\n@Component({\n  selector: 'app-casa-detail',\n  templateUrl: './casa-detail.component.html',\n  styleUrls: ['./casa-detail.component.css']\n})\nexport class CasaDetailComponent implements OnInit {\n\n  casa = {};\n\n  constructor(private route: ActivatedRoute, private casaService: CasaService, private router: Router) { }\n\n  ngOnInit() {\n    this.getCasaDetails(this.route.snapshot.params['id']);\n  }\n\n  getCasaDetails(id) {\n    this.casaService.getCasa(id)\n      .subscribe(data => {\n        console.log(data);\n        this.casa = data;\n      }   );\n      console.log(this.casa);\n  }\n\n  deleteCasa(id) {\n    this.casaService.deleteCasa(id)\n      .subscribe(res => {\n          this.router.navigate(['/casas']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  getBoolValue(bool:Boolean){\n    if(bool==true){\n      return \"Sim\"\n    }else\n      return \"Não\"\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"casaDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"casaForm\\\" (ngSubmit)=\\\"onFormSubmit(casaForm.value)\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Quartos\\\" formControlName=\\\"quartos\\\"\\n               [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error>\\n          <span *ngIf=\\\"!casaForm.get('quartos').valid && casaForm.get('quartos').touched\\\">Quantidade de Quartos</span>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Suites\\\" formControlName=\\\"suites\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('suites').valid && casaForm.get('suites').touched\\\">Quantidade de Suítes</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Sala_estar\\\" formControlName=\\\"sala_estar\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('sala_estar').valid && casaForm.get('sala_estar').touched\\\">Quantidade de Salas de Estar</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Vagas\\\" formControlName=\\\"vagas\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('vagas').valid && casaForm.get('vagas').touched\\\">Quantidade de Vagas</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('area').valid && casaForm.get('area').touched\\\">Área</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Valor do aluguel\\\" formControlName=\\\"valoraluguel\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('valoraluguel').valid && casaForm.get('valoraluguel').touched\\\">Valor do Aluguel</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Descricao\\\" formControlName=\\\"descricao\\\"\\n                   [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n              <span *ngIf=\\\"!casaForm.get('descricao').valid && casaForm.get('descricao').touched\\\">Descrição</span>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n              <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Rua\\\" formControlName=\\\"rua\\\"\\n                             [errorStateMatcher]=\\\"matcher\\\">\\n                      <mat-error>\\n                        <span *ngIf=\\\"!casaForm.get('rua').valid && casaForm.get('rua').touched\\\">Rua</span>\\n                      </mat-error>\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n              <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Número\\\" formControlName=\\\"numero\\\"\\n                             [errorStateMatcher]=\\\"matcher\\\">\\n                      <mat-error>\\n                        <span *ngIf=\\\"!casaForm.get('numero').valid && casaForm.get('numero').touched\\\">Número</span>\\n                      </mat-error>\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n            <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n                <mat-form-field>\\n                    <mat-label>Bairro</mat-label>\\n                    <mat-select formControlName=\\\"endereco\\\">\\n                      <mat-option  *ngFor=\\\"let endereco of enderecos\\\" [value]=\\\"endereco\\\">\\n                        {{endereco.bairro}}\\n                        -\\n                        {{endereco.cidade}}      \\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n            </mat-grid-tile>\\n            <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n                <mat-checkbox formControlName=\\\"armario_embutido\\\">Armário Embutido</mat-checkbox>   \\n            </mat-grid-tile>\\n        </mat-grid-list>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!casaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CasaService } from '../casa.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n@Component({\n  selector: 'app-casa-edit',\n  templateUrl: './casa-edit.component.html',\n  styleUrls: ['./casa-edit.component.css']\n})\nexport class CasaEditComponent implements OnInit {\n  \n  casaForm: FormGroup;\n  enderecos:any;\n  id:string = '';\n  quartos: number;\n  suites: number;\n  sala_estar: number;\n  vagas:number;\n  area:number;\n  armario_embutido:boolean;\n  valoraluguel:Number;\n  descricao:string;\n  rua:String;\n  numero:String;\n  endereco:{\n    bairro:string,\n    cidade:string,\n    estado:string,  }\n\n  constructor(private router: Router, private route: ActivatedRoute,\n     private casaService: CasaService, private formBuilder: FormBuilder,\n     private enderecoService:EnderecoService) { \n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n     }\n\n  ngOnInit() {\n    this.getCasa(this.route.snapshot.params['id']);\n    this.casaForm = this.formBuilder.group({\n      'quartos' : [null, Validators.required],\n      'suites' : [null, Validators.required],\n      'sala_estar' : [null, Validators.required],\n      'vagas' : [null, Validators.required],\n      'area' : [null, Validators.required],\n      'armario_embutido' : [null, Validators.required],\n      'descricao' : [null, Validators.required],\n      'endereco' : [null, Validators.required],\n      'valoraluguel' : [null, Validators.required],\n      'numero' : [null, Validators.required],\n      'rua' : [null, Validators.required]\n    });\n  }\n\n  getCasa(id) {\n    this.casaService.getCasa(id).subscribe(data => {\n      this.id = data._id;\n      this.casaForm.setValue({\n        quartos: data.quarto,\n        suites: data.suite,\n        sala_estar: data.sala_estar,\n        vagas:data.vagas,\n        area:data.area,\n        armario_embutido:data.armario_embutido,\n        descricao:data.descricao,\n        endereco:data.endereco,\n        valoraluguel:data.valoraluguel\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.casaService.updateCasa(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/casa-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  casaDetails() {\n    this.router.navigate(['/casa-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casa-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"bairro\\\">\\n        <th mat-header-cell *matHeaderCellDef> Bairro </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endereco.bairro}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"quartos\\\">\\n      <th mat-header-cell *matHeaderCellDef> Quartos</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" > {{element.quartos}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"suites\\\">\\n      <th mat-header-cell *matHeaderCellDef> Suites </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.suites}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"vagas\\\">\\n      <th mat-header-cell *matHeaderCellDef> Vagas </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vagas}} </td>\\n    </ng-container>   \\n\\n    <ng-container matColumnDef=\\\"valoraluguel\\\">\\n      <th mat-header-cell *matHeaderCellDef> Valor aluguel </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.valoraluguel}} </td>\\n    </ng-container>   \\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/casa-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CasaService } from '../casa.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-casa-list',\n  templateUrl: './casa-list.component.html',\n  styleUrls: ['./casa-list.component.css']\n})\nexport class CasaListComponent implements OnInit {\n\n\n  casas: any;\n  displayedColumns = ['quartos', 'suites', 'vagas','bairro','valoraluguel'];\n  dataSource = new CasaDataSource(this.casaService);\n\n  constructor(private casaService: CasaService) { }\n\n  ngOnInit() {\n    this.casaService.getCasas()\n      .subscribe(res => {\n        console.log(res);\n        this.casas = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class CasaDataSource extends DataSource<any> {\n  constructor(private casaService: CasaService) {\n    super()\n  }\n\n  connect() {\n    return this.casaService.getCasas();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apicasa\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CasaService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getCasas(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getCasa(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postCasa(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateCasa(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteCasa(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    \\n    \\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n   \\n    <mat-nav-list>\\n      <!--\\n      <a mat-list-item routerLink=\\\"/matiere\\\">Matiere</a>\\n      <a mat-list-item href=\\\"/second-page\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n      <a mat-list-item href=\\\"/pessoa\\\">Pessoa</a>      \\n      <a mat-list-item routerLink=\\\"/books\\\">Livros</a>\\n      -->\\n      <mat-icon  mat-list-item  routerLink=\\\"/inicio\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">home</mat-icon>\\n      \\n      <a mat-list-item routerLink=\\\"/enderecos\\\">Endereços</a>\\n      <a mat-list-item routerLink=\\\"/voos\\\">Voos</a>\\n      <a mat-list-item routerLink=\\\"/reservas\\\">Reservas</a>\\n      <a mat-list-item routerLink=\\\"/passagensaereas\\\">Passagens Aéreas</a>\\n\\n    </mat-nav-list>    \\n    <!--\\n    <mat-nav-list>\\n        <a mat-list-item routerLink=\\\"/reserva\\\">Reserva</a>\\n    </mat-nav-list>\\n    -->\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n\\n      </button>\\n      <span>Reserva Aérea</span>\\n\\n\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {tap} from \"rxjs/internal/operators\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n    \n\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/enderecos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"enderecoForm\\\" (ngSubmit)=\\\"onFormSubmit(enderecoForm.value)\\\">\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"País\\\" formControlName=\\\"pais\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('pais').valid && enderecoForm.get('pais').touched\\\">País</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Cidade\\\" formControlName=\\\"cidade\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('cidade').valid && enderecoForm.get('cidade').touched\\\">Cidade</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"estado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('estado').valid && enderecoForm.get('estado').touched\\\">Estado</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sigla Estado\\\" formControlName=\\\"siglaestado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('siglaestado').valid && enderecoForm.get('siglaestado').touched\\\">Sigla do Estado</span>\\n    </mat-error>\\n  </mat-form-field>\\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!enderecoForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EnderecoService } from '../endereco.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-endereco-create',\n  templateUrl: './endereco-create.component.html',\n  styleUrls: ['./endereco-create.component.css']\n})\nexport class EnderecoCreateComponent implements OnInit {\n\n  enderecoForm: FormGroup;\n  pais:string='';\n  cidade:string='';\n  estado:string='';\n  siglaestado:string='';\n\n  constructor(private router: Router, private enderecoService: EnderecoService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.enderecoForm = this.formBuilder.group({\n      'pais' : [null, Validators.required],\n      'cidade' : [null, Validators.required],\n      'estado' : [null, Validators.required],\n      'siglaestado' : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.enderecoService.postEndereco(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/endereco-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/enderecos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  \\n  <mat-card-content>\\n    <dl>\\n      <dt>País:</dt>\\n      <dd>{{endereco.pais}}</dd>\\n      <dt>Cidade:</dt>\\n      <dd>{{endereco.cidade}}</dd>\\n      <dt>Estado:</dt>\\n      <dd>{{endereco.estado}}</dd>\\n      <dt>Sigla Estado:</dt>\\n      <dd>{{endereco.siglaestado}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/endereco-edit', endereco._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEndereco(endereco._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EnderecoService } from '../endereco.service';\n\n@Component({\n  selector: 'app-endereco-detail',\n  templateUrl: './endereco-detail.component.html',\n  styleUrls: ['./endereco-detail.component.css']\n})\nexport class EnderecoDetailComponent implements OnInit {\n\n  endereco = {};\n\n  constructor(private route: ActivatedRoute, private enderecoService: EnderecoService, \n    private router: Router) { }\n\n  ngOnInit() {\n    this.getEnderecoDetails(this.route.snapshot.params['id']);\n  }\n\n  getEnderecoDetails(id) {\n    this.enderecoService.getEndereco(id)\n      .subscribe(data => {\n        console.log(data);\n        this.endereco = data;\n      }   );\n      console.log(\"oi\"+this.endereco);\n  }\n\n  deleteEndereco(id) {\n    this.enderecoService.deleteEndereco(id)\n      .subscribe(res => {\n          this.router.navigate(['/enderecos']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"enderecoDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"enderecoForm\\\" (ngSubmit)=\\\"onFormSubmit(enderecoForm.value)\\\">\\n  \\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"País\\\" formControlName=\\\"pais\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('pais').valid && enderecoForm.get('pais').touched\\\">País</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Cidade\\\" formControlName=\\\"cidade\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('cidade').valid && enderecoForm.get('cidade').touched\\\">Please enter Endereco Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"estado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('estado').valid && enderecoForm.get('estado').touched\\\">Please enter Endereco Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sigla Estado\\\" formControlName=\\\"siglaestado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('siglaestado').valid && enderecoForm.get('siglaestado').touched\\\">Please enter Endereco Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!enderecoForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EnderecoService } from '../endereco.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-endereco-edit',\n  templateUrl: './endereco-edit.component.html',\n  styleUrls: ['./endereco-edit.component.css']\n})\nexport class EnderecoEditComponent implements OnInit {\n\n  enderecoForm: FormGroup;\n  id:string = '';\n  pais:string = '';\n  cidade:string = '';\n  estado:string = '';\n  siglaestado:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, \n    private enderecoService: EnderecoService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getEndereco(this.route.snapshot.params['id']);\n    this.enderecoForm = this.formBuilder.group({\n      'pais' : [null, Validators.required],\n      'cidade' : [null, Validators.required],\n      'estado' : [null, Validators.required],\n      'siglaestado' : [null, Validators.required]\n    });\n  }\n\n  getEndereco(id) {\n    this.enderecoService.getEndereco(id).subscribe(data => {\n      this.id = data._id;\n      this.enderecoForm.setValue({\n        pais: data.pais,\n        cidade: data.cidade,\n        estado: data.estado,\n        siglaestado: data.siglaestado\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.enderecoService.updateEndereco(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/endereco-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  enderecoDetails() {\n    this.router.navigate(['/endereco-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/endereco-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"pais\\\">\\n      <th mat-header-cell *matHeaderCellDef> País </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.pais}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"cidade\\\">\\n      <th mat-header-cell *matHeaderCellDef> Cidade</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.cidade}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"estado\\\">\\n      <th mat-header-cell *matHeaderCellDef> Estado </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.estado}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"siglaestado\\\">\\n      <th mat-header-cell *matHeaderCellDef> Sigla Estado </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.siglaestado}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/endereco-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EnderecoService } from '../endereco.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-endereco-list',\n  templateUrl: './endereco-list.component.html',\n  styleUrls: ['./endereco-list.component.css']\n})\nexport class EnderecoListComponent implements OnInit {\n\n  enderecos: any;\n  displayedColumns = ['pais', 'cidade', 'estado','siglaestado'];\n  dataSource = new EnderecoDataSource(this.apiService);\n\n  constructor(private apiService: EnderecoService ) { }\n\n  ngOnInit() {\n    this.apiService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n      \n  }\n}\n\nexport class EnderecoDataSource extends DataSource<any> {\n  constructor(private apiService: EnderecoService) {\n    super()\n  }\n\n  connect() {\n    return this.apiService.getEnderecos();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apiendereco\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnderecoService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getEnderecos(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getEndereco(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postEndereco(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateEndereco(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteEndereco(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \"\\n/*sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: sticky;\\n  top: 0;\\n}*/\\n\\n/*.example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}*/\\n\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <div class=\\\"col-md-12 pad-10\\\">\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"goToAddEndereco()\\\">\\n                <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Cadastro de Endereço\\n                </button>\\n            </div>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n            <div class=\\\"col-md-12 pad-10\\\">\\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToAddCasa()\\\">\\n                    <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Cadastro de Casa\\n                    </button>\\n            </div>      \\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n            <div class=\\\"col-md-12 pad-10\\\">\\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToAddApartamento()\\\">\\n                    <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Cadastro de Apartamento\\n                    </button>\\n            </div>      \\n        </mat-grid-tile>\\n    </mat-grid-list>\\n<!--\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" [style.background]=\\\"'lightblue'\\\">\\n        <div class=\\\"col-md-12 pad-10\\\">\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"goToAddEndereco()\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Adicionar Endereço\\n            </button>\\n        </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" [style.background]=\\\"'lightblue'\\\">\\n        <div class=\\\"col-md-12 pad-10\\\">\\n                <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToAddCasa()\\\">\\n                <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Adicionar Casa\\n                </button>\\n        </div>      \\n    </mat-grid-tile>\\n</mat-grid-list>\\n-->\\n<!--\\n<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n    <mat-grid-tile\\n        *ngFor=\\\"let tile of tiles\\\"\\n        [colspan]=\\\"tile.cols\\\"\\n        [rowspan]=\\\"tile.rows\\\"\\n        [style.background]=\\\"tile.color\\\">\\n      {{tile.text}}\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  -->\"","import { Component, OnInit } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport {Router} from \"@angular/router\";\nimport { map } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n\n  \n}\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  tiles: Tile[] = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)  );\n\n  constructor(private router: Router,private breakpointObserver: BreakpointObserver) { }\n\n  goToAddEndereco () {\n    this.router.navigateByUrl('/endereco-create');\n  }\n\n  goToAddCasa () {\n    this.router.navigateByUrl('/casa-create');\n  }\n\n  goToAddApartamento() {\n    this.router.navigateByUrl('/apartamento-create');\n  }\n\n  ngOnInit() {\n  }\n}\n\n\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/passagemaereas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"passagemaereaForm\\\" (ngSubmit)=\\\"onFormSubmit(passagemaereaForm.value)\\\">\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Código\\\" formControlName=\\\"codigo\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!passagemaereaForm.get('codigo').valid && passagemaereaForm.get('codigo').touched\\\">Código</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Preço\\\" formControlName=\\\"preco\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!passagemaereaForm.get('preco').valid && passagemaereaForm.get('preco').touched\\\">Preço</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Ida</mat-label>\\n    <mat-select formControlName=\\\"vooIda\\\">\\n      <mat-option  *ngFor=\\\"let vooIda of idas\\\" [value]=\\\"vooIda\\\">\\n        {{vooIda.dataPartida| date:\\\"dd/MM/yyyy HH:mm\\\"}} - {{vooIda.dataChegada | date:\\\"dd/MM/yyyy HH:mm\\\"}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Volta</mat-label>\\n    <mat-select formControlName=\\\"vooVolta\\\">\\n      <mat-option  *ngFor=\\\"let vooVolta of voltas\\\" [value]=\\\"vooVolta\\\">\\n        {{vooVolta.dataPartida| date:\\\"dd/MM/yyyy HH:mm\\\"}} - {{vooVolta.dataChegada | date:\\\"dd/MM/yyyy HH:mm\\\"}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>  \\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!passagemaereaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PassagemAereaService } from '../passagemaerea.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{VooService} from '../../voo/voo.service';\n\n@Component({\n  selector: 'app-passagemaerea-create',\n  templateUrl: './passagemaerea-create.component.html',\n  styleUrls: ['./passagemaerea-create.component.css']\n})\nexport class PassagemAereaCreateComponent implements OnInit {\n\n  idas:any;\n  voltas:any;\n  passagemaereaForm: FormGroup;\n  codigo:Number;\n  preco: Number;\n\n  vooIda:{\n    numero: Number,\n    dataPartida: Date,\n    dataChegada: Date,\n    passagensDisp: Number,\n    origem:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'São Paulo' },\n      estado: { type: String, default: 'São Paulo' },\n      siglaestado: { type: String, default: 'SP' }\n    },\n    destino:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'Belo Horizonte' },\n      estado: { type: String, default: 'Minas Gerais' },\n      siglaestado: { type: String, default: 'MG' }\n    }\n  };\n  vooVolta:{\n    numero: Number,\n    dataPartida: Date,\n    dataChegada: Date,\n    passagensDisp: Number,\n    origem:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'São Paulo' },\n      estado: { type: String, default: 'São Paulo' },\n      siglaestado: { type: String, default: 'SP' }\n    },\n    destino:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'Belo Horizonte' },\n      estado: { type: String, default: 'Minas Gerais' },\n      siglaestado: { type: String, default: 'MG' }\n    }\n  };\n\n\n  constructor(private router: Router, private passagemaereaService: PassagemAereaService, \n    private formBuilder: FormBuilder, private vooService: VooService) { \n      this.vooService.getVoos()\n      .subscribe(res => {\n        console.log(res);\n        this.idas = res;\n        this.voltas = res;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n  ngOnInit() {\n    this.passagemaereaForm = this.formBuilder.group({\n      'codigo' : [null, Validators.required],\n      'preco' : [null, Validators.required],\n      'vooIda' : [null, Validators.required],\n      'vooVolta' : [null, Validators],\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.passagemaereaService.postPassagemAerea(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/passagemaerea-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/passagensaereas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  \\n  <mat-card-content>\\n    <dl>\\n      <dt>Código:</dt>\\n      <dd>{{passagemaerea.codigo}}</dd>\\n      <dt>Preco:</dt>\\n      <dd>{{passagemaerea.preco}}</dd>\\n      <dt>Ida:</dt>\\n      <dd>{{passagemaerea.vooIda.dataPartida| date:\\\"dd/MM/yyyy HH:mm\\\"}}</dd>\\n      <dd>{{passagemaerea.vooIda.dataChegada| date:\\\"dd/MM/yyyy HH:mm\\\"}}</dd>\\n      <dt>Volta:</dt>\\n      <dd>{{passagemaerea.vooVolta.dataPartida| date:\\\"dd/MM/yyyy HH:mm\\\"}}</dd>\\n      <dd>{{passagemaerea.vooVolta.dataChegada| date:\\\"dd/MM/yyyy HH:mm\\\"}}</dd>\\n      <dt>Cidade origem:</dt>\\n      <dd>{{passagemaerea.vooIda.origem.cidade}}</dd>\\n      <dt>Cidade destino:</dt>\\n      <dd>{{passagemaerea.vooIda.destino.cidade}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/passagemaerea-edit', passagemaerea._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deletePassagemAerea(passagemaerea._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PassagemAereaService } from '../passagemaerea.service';\n\n@Component({\n  selector: 'app-passagemaerea-detail',\n  templateUrl: './passagemaerea-detail.component.html',\n  styleUrls: ['./passagemaerea-detail.component.css']\n})\nexport class PassagemAereaDetailComponent implements OnInit {\n\n  passagemaerea = {};\n\n  constructor(private route: ActivatedRoute, private passagemaereaService: PassagemAereaService, \n    private router: Router) { }\n\n  ngOnInit() {\n    this.getPassagemAereaDetails(this.route.snapshot.params['id']);\n  }\n\n  getPassagemAereaDetails(id) {\n    this.passagemaereaService.getPassagemAerea(id)\n      .subscribe(data => {\n        console.log(data);\n        this.passagemaerea = data;\n      }   );\n      console.log(\"oi\"+this.passagemaerea);\n  }\n\n  deletePassagemAerea(id) {\n    this.passagemaereaService.deletePassagemAerea(id)\n      .subscribe(res => {\n          this.router.navigate(['/passagensaereas']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"passagemaereaDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"passagemaereaForm\\\" (ngSubmit)=\\\"onFormSubmit(passagemaereaForm.value)\\\">\\n  \\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Código\\\" formControlName=\\\"codigo\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!passagemaereaForm.get('codigo').valid && passagemaereaForm.get('codigo').touched\\\">Código</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Preço\\\" formControlName=\\\"preco\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!passagemaereaForm.get('preco').valid && passagemaereaForm.get('preco').touched\\\">Preço</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Ida</mat-label>\\n    <mat-select formControlName=\\\"vooIda\\\">\\n      <mat-option  *ngFor=\\\"let vooIda of idas\\\" [value]=\\\"vooIda\\\">\\n        {{vooIda.dataPartida}} - {{vooIda.Chegada}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Volta</mat-label>\\n    <mat-select formControlName=\\\"vooVolta\\\">\\n      <mat-option  *ngFor=\\\"let vooVolta of voltas\\\" [value]=\\\"vooVolta\\\">\\n        {{vooVolta.dataPartida}} - {{vooVolta.Chegada}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>  \\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!passagemaereaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PassagemAereaService } from '../passagemaerea.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{VooService} from '../../voo/voo.service';\n\n\n@Component({\n  selector: 'app-passagemaerea-edit',\n  templateUrl: './passagemaerea-edit.component.html',\n  styleUrls: ['./passagemaerea-edit.component.css']\n})\nexport class PassagemAereaEditComponent implements OnInit {\n\n  id:string = '';\n  idas:any;\n  voltas:any;\n  passagemaereaForm: FormGroup;\n  codigo:Number;\n  preco: Number;\n\n  vooIda:{\n    numero: Number,\n    dataPartida: Date,\n    dataChegada: Date,\n    passagensDisp: Number,\n    origem:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'São Paulo' },\n      estado: { type: String, default: 'São Paulo' },\n      siglaestado: { type: String, default: 'SP' }\n    },\n    destino:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'Belo Horizonte' },\n      estado: { type: String, default: 'Minas Gerais' },\n      siglaestado: { type: String, default: 'MG' }\n    }\n  };\n  vooVolta:{\n    numero: Number,\n    dataPartida: Date,\n    dataChegada: Date,\n    passagensDisp: Number,\n    origem:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'São Paulo' },\n      estado: { type: String, default: 'São Paulo' },\n      siglaestado: { type: String, default: 'SP' }\n    },\n    destino:{\n      pais: { type: String, default: 'Brasil' },\n      cidade: { type: String, default: 'Belo Horizonte' },\n      estado: { type: String, default: 'Minas Gerais' },\n      siglaestado: { type: String, default: 'MG' }\n    }\n  };\n\n  constructor(private router: Router, private route: ActivatedRoute, \n    private passagemaereaService: PassagemAereaService, private formBuilder: FormBuilder,\n    private vooService: VooService) {\n      this.vooService.getVoos()\n      .subscribe(res => {\n        console.log(res);\n        this.idas = res;\n        this.voltas = res;\n      }, err => {\n        console.log(err);\n      });\n     }\n\n  ngOnInit() {\n    this.getPassagemAerea(this.route.snapshot.params['id']);\n    this.passagemaereaForm = this.formBuilder.group({\n      'codigo' : [null, Validators.required],\n      'preco' : [null, Validators.required],\n      'vooIda' : [null, Validators.required],\n      'vooVolta' : [null, Validators],\n    });\n  }\n\n  getPassagemAerea(id) {\n    this.passagemaereaService.getPassagemAerea(id).subscribe(data => {\n      this.id = data._id;\n      this.passagemaereaForm.setValue({\n        codigo: data.codigo,\n        preco: data.preco,\n        vooIda:data.vooIda,\n        vooVolta: data.vooVolta\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.passagemaereaService.updatePassagemAerea(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/passagemaerea-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  passagemaereaDetails() {\n    this.router.navigate(['/passagemaerea-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/passagemaerea-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <ng-container matColumnDef=\\\"codigo\\\">\\n      <th mat-header-cell *matHeaderCellDef> Código </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.codigo}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"preco\\\">\\n      <th mat-header-cell *matHeaderCellDef> Preço</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.preco}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"vooIda\\\">\\n      <th mat-header-cell *matHeaderCellDef>Ida</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vooIda.dataPartida | date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vooIda.dataChegada | date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"vooVolta\\\">\\n      <th mat-header-cell *matHeaderCellDef>Volta </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vooVolta.dataPartida | date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vooVolta.dataChegada | date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/passagemaerea-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PassagemAereaService } from '../passagemaerea.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-passagemaerea-list',\n  templateUrl: './passagemaerea-list.component.html',\n  styleUrls: ['./passagemaerea-list.component.css']\n})\nexport class PassagemAereaListComponent implements OnInit {\n\n  passagensaereas: any;\n  displayedColumns = ['codigo', 'preco', 'vooIda','vooVolta'];\n  dataSource = new PassagemAereaDataSource(this.apiPassagemAerea);\n\n  constructor(private apiPassagemAerea: PassagemAereaService ) { }\n\n  ngOnInit() {\n    this.apiPassagemAerea.getPassagemAereas()\n      .subscribe(res => {\n        console.log(res);\n        this.passagensaereas = res;\n      }, err => {\n        console.log(err);\n      });\n      \n  }\n}\n\nexport class PassagemAereaDataSource extends DataSource<any> {\n  constructor(private apiPassagemAerea: PassagemAereaService) {\n    super()\n  }\n\n  connect() {\n    return this.apiPassagemAerea.getPassagemAereas();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apipassagemaerea\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PassagemAereaService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getPassagemAereas(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getPassagemAerea(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postPassagemAerea(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updatePassagemAerea(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deletePassagemAerea(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/reservas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"reservaForm\\\" (ngSubmit)=\\\"onFormSubmit(reservaForm.value)\\\">\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Pessoas\\\" formControlName=\\\"pessoas\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!reservaForm.get('pessoas').valid && reservaForm.get('pessoas').touched\\\">Pessoas</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n      <h3>Data de ida</h3>\\n      <p-calendar [(ngModel)]=\\\"dataIda\\\" formControlName=\\\"dataIda\\\"></p-calendar>\\n  </div>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n    <h3>Data de volta</h3>\\n    <p-calendar [(ngModel)]=\\\"dataVolta\\\" formControlName=\\\"dataVolta\\\"></p-calendar>\\n  </div>\\n\\n  <mat-form-field>\\n    <mat-label>Cidade Origem</mat-label>\\n    <mat-select formControlName=\\\"origem\\\">\\n      <mat-option  *ngFor=\\\"let origem of origens\\\" [value]=\\\"origem\\\">\\n        {{origem.cidade}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Destino</mat-label>\\n    <mat-select formControlName=\\\"destino\\\">\\n      <mat-option  *ngFor=\\\"let destino of destinos\\\" [value]=\\\"destino\\\">\\n        {{destino.cidade}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  \\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!reservaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ReservaService } from '../reserva.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n@Component({\n  selector: 'app-reserva-create',\n  templateUrl: './reserva-create.component.html',\n  styleUrls: ['./reserva-create.component.css']\n})\nexport class ReservaCreateComponent implements OnInit {\n\n  origens:any;\n  destinos:any;\n  reservaForm: FormGroup;\n  pessoas:Number;\n  dataIda: Date;\n  dataVolta:Date;\n\n  origem:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n  destino:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n\n\n  constructor(private router: Router, private reservaService: ReservaService, \n    private formBuilder: FormBuilder, private enderecoService: EnderecoService) { \n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.origens = res;\n        this.destinos = res;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n  ngOnInit() {\n    this.reservaForm = this.formBuilder.group({\n      'pessoas' : [null, Validators.required],\n      'dataIda' : [null, Validators.required],\n      'dataVolta' : [null, Validators],\n      'origem' : [null, Validators.required],\n      'destino' : [null, Validators.required],\n\n    });\n  }\n\n  validaCidade(){\n    if(this.origem.cidade==this.destino.cidade){\n      console.log(\"inválido!\")\n    }\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.reservaService.postReserva(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/reserva-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/reservas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  \\n  <mat-card-content>\\n    <dl>\\n      <dt>Quant. pessoas:</dt>\\n      <dd>{{reserva.pessoas}}</dd>\\n      <dt>Data de Ida:</dt>\\n      <dd>{{reserva.dataIda}}</dd>\\n      <dt>Data de Volta:</dt>\\n      <dd>{{reserva.dataVolta}}</dd>\\n      <dt>Cidade origem:</dt>\\n      <dd>{{reserva.origem.cidade}}</dd>\\n      <dt>Cidade destino:</dt>\\n      <dd>{{reserva.destino.cidade}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/reserva-edit', reserva._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteReserva(reserva._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ReservaService } from '../reserva.service';\n\n@Component({\n  selector: 'app-reserva-detail',\n  templateUrl: './reserva-detail.component.html',\n  styleUrls: ['./reserva-detail.component.css']\n})\nexport class ReservaDetailComponent implements OnInit {\n\n  reserva = {};\n\n  constructor(private route: ActivatedRoute, private reservaService: ReservaService, \n    private router: Router) { }\n\n  ngOnInit() {\n    this.getReservaDetails(this.route.snapshot.params['id']);\n  }\n\n  getReservaDetails(id) {\n    this.reservaService.getReserva(id)\n      .subscribe(data => {\n        console.log(data);\n        this.reserva = data;\n      }   );\n      console.log(\"oi\"+this.reserva);\n  }\n\n  deleteReserva(id) {\n    this.reservaService.deleteReserva(id)\n      .subscribe(res => {\n          this.router.navigate(['/reservas']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"reservaDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"reservaForm\\\" (ngSubmit)=\\\"onFormSubmit(reservaForm.value)\\\">\\n  \\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Pessoas\\\" formControlName=\\\"pessoas\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!reservaForm.get('pessoas').valid && reservaForm.get('pessoas').touched\\\">Pessoas</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n      <h3>Data de ida</h3>\\n      <p-calendar [(ngModel)]=\\\"dataIda\\\" formControlName=\\\"dataIda\\\"></p-calendar>\\n  </div>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n    <h3>Data de volta</h3>\\n    <p-calendar [(ngModel)]=\\\"dataVolta\\\" formControlName=\\\"dataVolta\\\"></p-calendar>\\n  </div>\\n\\n  <mat-form-field>\\n    <mat-label>Cidade Origem</mat-label>\\n    <mat-select formControlName=\\\"origem\\\">\\n      <mat-option  *ngFor=\\\"let origem of origens\\\" [value]=\\\"origem\\\">\\n        {{origem.cidade}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Destino</mat-label>\\n    <mat-select formControlName=\\\"destino\\\">\\n      <mat-option  *ngFor=\\\"let destino of destinos\\\" [value]=\\\"destino\\\">\\n        {{destino.cidade}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!reservaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ReservaService } from '../reserva.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n\n@Component({\n  selector: 'app-reserva-edit',\n  templateUrl: './reserva-edit.component.html',\n  styleUrls: ['./reserva-edit.component.css']\n})\nexport class ReservaEditComponent implements OnInit {\n\n  origens:any;\n  destinos:any;\n  reservaForm: FormGroup;\n  id:string = '';\n  pessoas:Number;\n  dataIda:Date;\n  dataVolta: Date;\n  origem:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n  destino:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n\n  constructor(private router: Router, private route: ActivatedRoute, \n    private reservaService: ReservaService, private formBuilder: FormBuilder,\n    private enderecoService: EnderecoService) {\n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.origens = res;\n        this.destinos = res;\n      }, err => {\n        console.log(err);\n      });\n     }\n\n  ngOnInit() {\n    this.getReserva(this.route.snapshot.params['id']);\n    this.reservaForm = this.formBuilder.group({\n      'pessoas' : [null, Validators.required],\n      'dataIda' : [null, Validators.required],\n      'dataVolta' : [null, Validators],\n      'origem' : [null, Validators.required],\n      'destino' : [null, Validators.required]\n    });\n  }\n\n  getReserva(id) {\n    this.reservaService.getReserva(id).subscribe(data => {\n      this.id = data._id;\n      this.reservaForm.setValue({\n        pessoas: data.pessoas,\n        dataIda: data.dataIda,\n        dataVolta: data.dataVolta,\n        origem: data.origem,\n        destino: data.destino\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.reservaService.updateReserva(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/reserva-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  reservaDetails() {\n    this.router.navigate(['/reserva-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/reserva-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <ng-container matColumnDef=\\\"pessoas\\\">\\n      <th mat-header-cell *matHeaderCellDef> Quant. pessoas </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.pessoas}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"dataIda\\\">\\n      <th mat-header-cell *matHeaderCellDef> Data de Ida</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dataIda| date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"dataVolta\\\">\\n      <th mat-header-cell *matHeaderCellDef>Data de Volta</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dataVolta| date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"origem\\\">\\n      <th mat-header-cell *matHeaderCellDef>Cidade Origem </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.origem.cidade}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"destino\\\">\\n      <th mat-header-cell *matHeaderCellDef> Cidade destino </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.destino.cidade}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/reserva-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ReservaService } from '../reserva.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-reserva-list',\n  templateUrl: './reserva-list.component.html',\n  styleUrls: ['./reserva-list.component.css']\n})\nexport class ReservaListComponent implements OnInit {\n\n  reservas: any;\n  displayedColumns = ['pessoas', 'origem', 'destino','dataIda','dataVolta'];\n  dataSource = new ReservaDataSource(this.apiReserva);\n\n  constructor(private apiReserva: ReservaService ) { }\n\n  ngOnInit() {\n    this.apiReserva.getReservas()\n      .subscribe(res => {\n        console.log(res);\n        this.reservas = res;\n      }, err => {\n        console.log(err);\n      });\n      \n  }\n}\n\nexport class ReservaDataSource extends DataSource<any> {\n  constructor(private apiReserva: ReservaService) {\n    super()\n  }\n\n  connect() {\n    return this.apiReserva.getReservas();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apireserva\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservaService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getReservas(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getReserva(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postReserva(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateReserva(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteReserva(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/voos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"vooForm\\\" (ngSubmit)=\\\"onFormSubmit(vooForm.value)\\\">\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Número\\\" formControlName=\\\"numero\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!vooForm.get('numero').valid && vooForm.get('numero').touched\\\">Número</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n    <h3>Data de Partida</h3>\\n    <p-calendar [(ngModel)]=\\\"dataPartida\\\" [showTime]=\\\"true\\\" formControlName=\\\"dataPartida\\\"></p-calendar>\\n  </div>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n    <h3>Data de Chegada</h3>\\n    <p-calendar [(ngModel)]=\\\"dataChegada\\\" [showTime]=\\\"true\\\" formControlName=\\\"dataChegada\\\"></p-calendar>\\n  </div>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Passagens Disponíveis\\\" formControlName=\\\"passagensDisp\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!vooForm.get('passagensDisp').valid && vooForm.get('passagensDisp').touched\\\">Passagens Disponíveis</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Origem</mat-label>\\n    <mat-select formControlName=\\\"origem\\\">\\n      <mat-option  *ngFor=\\\"let origem of origens\\\" [value]=\\\"origem\\\">\\n        {{origem.cidade}}\\n        ({{origem.siglaestado}})-{{origem.pais}}   \\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Destino</mat-label>\\n    <mat-select formControlName=\\\"destino\\\">\\n      <mat-option  *ngFor=\\\"let destino of destinos\\\" [value]=\\\"destino\\\">\\n        {{destino.cidade}}\\n        ({{destino.siglaestado}})-{{destino.pais}}   \\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n\\n<!--\\n  <mat-form-field >\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data de partida\\\" formControlName=\\\"dataPartida\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #picker></mat-datepicker>\\n  </mat-form-field>\\n\\n  <mat-form-field >\\n    <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Data de chegada\\\" formControlName=\\\"dataChegada\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #picker></mat-datepicker>\\n  </mat-form-field>\\n-->\\n  \\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!vooForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { VooService } from '../voo.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n@Component({\n  selector: 'app-voo-create',\n  templateUrl: './voo-create.component.html',\n  styleUrls: ['./voo-create.component.css']\n})\nexport class VooCreateComponent implements OnInit {\n\n  origens:any;\n  destinos:any;\n  vooForm: FormGroup;\n  numero: Number;\n  dataPartida: Date;\n  dataChegada: Date;\n  passagensDisp: Number;\n\n  origem:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n  destino:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n\n\n  constructor(private router: Router, private vooService: VooService, \n    private formBuilder: FormBuilder, private enderecoService: EnderecoService) { \n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.origens = res;\n        this.destinos = res;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n  ngOnInit() {\n    this.vooForm = this.formBuilder.group({\n      'numero' : [null, Validators.required],\n      'dataPartida' : [null, Validators.required],\n      'dataChegada' : [null, Validators.required],\n      'passagensDisp' : [null, Validators.required],\n      'origem' : [null, Validators.required],\n      'destino' : [null, Validators.required],\n\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.vooService.postVoo(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/voo-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/voos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  \\n  <mat-card-content>\\n    <dl>\\n      <dt>Número:</dt>\\n      <dd>{{voo.numero}}</dd>\\n      <dt>Data de Partida:</dt>\\n      <dd>{{voo.dataPartida| date:\\\"dd/MM/yyyy HH:mm\\\"}}</dd>\\n      <dt>Data de Chegada:</dt>\\n      <dd>{{voo.dataChegada| date:\\\"dd/MM/yyyy HH:mm\\\"}}</dd>\\n      <dt>Passagens Disponíveis:</dt>\\n      <dd>{{voo.passagensDisp}}</dd>\\n      <dt>Origem:</dt>\\n      <dd>{{voo.origem.cidade}}({{voo.origem.siglaestado}})</dd>\\n      <dt>Destino:</dt>\\n      <dd>{{voo.destino.cidade}}({{voo.destino.siglaestado}})</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/voo-edit', voo._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteVoo(voo._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VooService } from '../voo.service';\n\n@Component({\n  selector: 'app-voo-detail',\n  templateUrl: './voo-detail.component.html',\n  styleUrls: ['./voo-detail.component.css']\n})\nexport class VooDetailComponent implements OnInit {\n\n  voo = {};\n\n  constructor(private route: ActivatedRoute, private vooService: VooService, \n    private router: Router) { }\n\n  ngOnInit() {\n    this.getVooDetails(this.route.snapshot.params['id']);\n  }\n\n  getVooDetails(id) {\n    this.vooService.getVoo(id)\n      .subscribe(data => {\n        console.log(data);\n        this.voo = data;\n      }   );\n      console.log(\"oi\"+this.voo);\n  }\n\n  deleteVoo(id) {\n    this.vooService.deleteVoo(id)\n      .subscribe(res => {\n          this.router.navigate(['/voos']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"vooDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"vooForm\\\" (ngSubmit)=\\\"onFormSubmit(vooForm.value)\\\">\\n  \\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Número\\\" formControlName=\\\"numero\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!vooForm.get('numero').valid && vooForm.get('numero').touched\\\">Número</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n    <h3>Data de Partida</h3>\\n    <p-calendar [(ngModel)]=\\\"dataPartida\\\" [showTime]=\\\"true\\\" formControlName=\\\"dataPartida\\\"></p-calendar>\\n  </div>\\n\\n  <div class=\\\"ui-g-12 ui-md-4\\\">\\n    <h3>Data de Chegada</h3>\\n    <p-calendar [(ngModel)]=\\\"dataChegada\\\" [showTime]=\\\"true\\\" formControlName=\\\"dataChegada\\\"></p-calendar>\\n  </div>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Passagens Disponíveis\\\" formControlName=\\\"passagensDisp\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!vooForm.get('passagensDisp').valid && vooForm.get('passagensDisp').touched\\\">Passagens Disponíveis</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Origem</mat-label>\\n    <mat-select formControlName=\\\"origem\\\">\\n      <mat-option  *ngFor=\\\"let origem of origens\\\" [value]=\\\"origem\\\">\\n        {{origem.cidade}}\\n        ({{origem.siglaestado}})-{{origem.pais}}   \\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Destino</mat-label>\\n    <mat-select formControlName=\\\"destino\\\">\\n      <mat-option  *ngFor=\\\"let destino of destinos\\\" [value]=\\\"destino\\\">\\n        {{destino.cidade}}\\n        ({{destino.siglaestado}})-{{destino.pais}}   \\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!vooForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { VooService } from '../voo.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n\n@Component({\n  selector: 'app-voo-edit',\n  templateUrl: './voo-edit.component.html',\n  styleUrls: ['./voo-edit.component.css']\n})\nexport class VooEditComponent implements OnInit {\n\n  origens:any;\n  destinos:any;\n  vooForm: FormGroup;\n  id:string = '';\n  numero:Number;\n  dataPartida:Date;\n  dataChegada: Date;\n  passagensDisp: Number;\n  origem:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n  destino:{\n    pais: String, \n    cidade: String, \n    estado: String, \n    siglaestado:String,\n  }\n\n  constructor(private router: Router, private route: ActivatedRoute, \n    private vooService: VooService, private formBuilder: FormBuilder,\n    private enderecoService: EnderecoService) {\n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.origens = res;\n        this.destinos = res;\n      }, err => {\n        console.log(err);\n      });\n     }\n\n  ngOnInit() {\n    this.getVoo(this.route.snapshot.params['id']);\n    this.vooForm = this.formBuilder.group({\n      'numero' : [null, Validators.required],\n      'dataPartida' : [null, Validators.required],\n      'dataChegada' : [null, Validators.required],\n      'passagensDisp' : [null, Validators.required],\n      'origem' : [null, Validators.required],\n      'destino' : [null, Validators.required]\n    });\n  }\n\n  getVoo(id) {\n    this.vooService.getVoo(id).subscribe(data => {\n      this.id = data._id;\n      this.vooForm.setValue({\n        numero: data.numero,\n        dataPartida: data.dataPartida,\n        dataChegada: data.dataChegada,\n        passagensDisp: data.passagensDisp,\n        origem: data.origem,\n        destino: data.destino\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.vooService.updateVoo(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/voo-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  vooDetails() {\n    this.router.navigate(['/voo-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/voo-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"numero\\\">\\n      <th mat-header-cell *matHeaderCellDef> Número </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.numero}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"dataPartida\\\">\\n      <th mat-header-cell *matHeaderCellDef> Data de Partida</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dataPartida| date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"dataChegada\\\">\\n      <th mat-header-cell *matHeaderCellDef>Data de Chegada</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dataChegada|date:\\\"dd/MM/yyyy HH:mm\\\"}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"passagensDisp\\\">\\n      <th mat-header-cell *matHeaderCellDef> Passagens Disponíveis </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.passagensDisp}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"origem\\\">\\n      <th mat-header-cell *matHeaderCellDef> Origem </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.origem.cidade}}({{element.origem.siglaestado}}) </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"destino\\\">\\n      <th mat-header-cell *matHeaderCellDef> Destino </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.destino.cidade}}({{element.destino.siglaestado}}) </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/voo-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { VooService } from '../voo.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-voo-list',\n  templateUrl: './voo-list.component.html',\n  styleUrls: ['./voo-list.component.css']\n})\nexport class VooListComponent implements OnInit {\n\n  voos: any;\n  displayedColumns = ['numero', 'dataPartida', 'dataChegada','passagensDisp','origem','destino'];\n  dataSource = new VooDataSource(this.apiVoo);\n\n  constructor(private apiVoo: VooService ) { }\n\n  ngOnInit() {\n    this.apiVoo.getVoos()\n      .subscribe(res => {\n        console.log(res);\n        this.voos = res;\n      }, err => {\n        console.log(err);\n      });\n      \n  }\n}\n\nexport class VooDataSource extends DataSource<any> {\n  constructor(private apiVoo: VooService) {\n    super()\n  }\n\n  connect() {\n    return this.apiVoo.getVoos();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apivoo\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VooService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getVoos(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getVoo(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postVoo(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateVoo(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteVoo(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}