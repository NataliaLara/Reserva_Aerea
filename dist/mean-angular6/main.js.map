{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apartamento/apartamento-create/apartamento-create.component.css","webpack:///./src/app/apartamento/apartamento-create/apartamento-create.component.html","webpack:///./src/app/apartamento/apartamento-create/apartamento-create.component.ts","webpack:///./src/app/apartamento/apartamento-detail/apartamento-detail.component.css","webpack:///./src/app/apartamento/apartamento-detail/apartamento-detail.component.html","webpack:///./src/app/apartamento/apartamento-detail/apartamento-detail.component.ts","webpack:///./src/app/apartamento/apartamento-edit/apartamento-edit.component.css","webpack:///./src/app/apartamento/apartamento-edit/apartamento-edit.component.html","webpack:///./src/app/apartamento/apartamento-edit/apartamento-edit.component.ts","webpack:///./src/app/apartamento/apartamento-list/apartamento-list.component.css","webpack:///./src/app/apartamento/apartamento-list/apartamento-list.component.html","webpack:///./src/app/apartamento/apartamento-list/apartamento-list.component.ts","webpack:///./src/app/apartamento/apartamento.service.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book/book-create/book-create.component.css","webpack:///./src/app/book/book-create/book-create.component.html","webpack:///./src/app/book/book-create/book-create.component.ts","webpack:///./src/app/book/book-detail/book-detail.component.css","webpack:///./src/app/book/book-detail/book-detail.component.html","webpack:///./src/app/book/book-detail/book-detail.component.ts","webpack:///./src/app/book/book-edit/book-edit.component.css","webpack:///./src/app/book/book-edit/book-edit.component.html","webpack:///./src/app/book/book-edit/book-edit.component.ts","webpack:///./src/app/book/book-list/book-list.component.css","webpack:///./src/app/book/book-list/book-list.component.html","webpack:///./src/app/book/book-list/book-list.component.ts","webpack:///./src/app/casa/casa-create/casa-create.component.css","webpack:///./src/app/casa/casa-create/casa-create.component.html","webpack:///./src/app/casa/casa-create/casa-create.component.ts","webpack:///./src/app/casa/casa-detail/casa-detail.component.css","webpack:///./src/app/casa/casa-detail/casa-detail.component.html","webpack:///./src/app/casa/casa-detail/casa-detail.component.ts","webpack:///./src/app/casa/casa-edit/casa-edit.component.css","webpack:///./src/app/casa/casa-edit/casa-edit.component.html","webpack:///./src/app/casa/casa-edit/casa-edit.component.ts","webpack:///./src/app/casa/casa-list/casa-list.component.css","webpack:///./src/app/casa/casa-list/casa-list.component.html","webpack:///./src/app/casa/casa-list/casa-list.component.ts","webpack:///./src/app/casa/casa.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/endereco/endereco-create/endereco-create.component.css","webpack:///./src/app/endereco/endereco-create/endereco-create.component.html","webpack:///./src/app/endereco/endereco-create/endereco-create.component.ts","webpack:///./src/app/endereco/endereco-detail/endereco-detail.component.css","webpack:///./src/app/endereco/endereco-detail/endereco-detail.component.html","webpack:///./src/app/endereco/endereco-detail/endereco-detail.component.ts","webpack:///./src/app/endereco/endereco-edit/endereco-edit.component.css","webpack:///./src/app/endereco/endereco-edit/endereco-edit.component.html","webpack:///./src/app/endereco/endereco-edit/endereco-edit.component.ts","webpack:///./src/app/endereco/endereco-list/endereco-list.component.css","webpack:///./src/app/endereco/endereco-list/endereco-list.component.html","webpack:///./src/app/endereco/endereco-list/endereco-list.component.ts","webpack:///./src/app/endereco/endereco.service.ts","webpack:///./src/app/inicio/inicio.component.css","webpack:///./src/app/inicio/inicio.component.html","webpack:///./src/app/inicio/inicio.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/apartamentos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"apartamentoForm\\\" (ngSubmit)=\\\"onFormSubmit(apartamentoForm.value)\\\">    \\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Quartos\\\" formControlName=\\\"quartos\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('quartos').valid && apartamentoForm.get('quartos').touched\\\">Quantidade de Quartos</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Suites\\\" formControlName=\\\"suites\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('suites').valid && apartamentoForm.get('suites').touched\\\">Quantidade de Suítes</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sala estar\\\" formControlName=\\\"sala_estar\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('sala_estar').valid && apartamentoForm.get('sala_estar').touched\\\">Quantidade de Salas de Estar</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sala jantar\\\" formControlName=\\\"sala_jantar\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('sala_jantar').valid && apartamentoForm.get('sala_jantar').touched\\\">Quantidade de Salas de Jantar</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Vagas\\\" formControlName=\\\"vagas\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('vagas').valid && apartamentoForm.get('vagas').touched\\\">Quantidade de Vagas</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  \\n\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n      <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Andar\\\" formControlName=\\\"andar\\\"\\n                     [errorStateMatcher]=\\\"matcher\\\">\\n              <mat-error>\\n                <span *ngIf=\\\"!apartamentoForm.get('andar').valid && apartamentoForm.get('andar').touched\\\">Andar</span>\\n              </mat-error>\\n            </mat-form-field>\\n      </mat-grid-tile>\\n      <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Apto\\\" formControlName=\\\"apto\\\"\\n                     [errorStateMatcher]=\\\"matcher\\\">\\n              <mat-error>\\n                <span *ngIf=\\\"!apartamentoForm.get('apto').valid && apartamentoForm.get('apto').touched\\\">Apto</span>\\n              </mat-error>\\n            </mat-form-field>\\n      </mat-grid-tile>\\n  </mat-grid-list>\\n\\n\\n\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Valor Condomíniio\\\" formControlName=\\\"valorcondominio\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('valorcondominio').valid && apartamentoForm.get('valorcondominio').touched\\\">Valor do Condomínio</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('area').valid && apartamentoForm.get('area').touched\\\">Área (em metros quadrados)</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Valor do aluguel\\\" formControlName=\\\"valoraluguel\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('valoraluguel').valid && apartamentoForm.get('valoraluguel').touched\\\">Valor do aluguel</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Descricao\\\" formControlName=\\\"descricao\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!apartamentoForm.get('descricao').valid && apartamentoForm.get('descricao').touched\\\">Descrição</span>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Rua\\\" formControlName=\\\"rua\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error>\\n                  <span *ngIf=\\\"!apartamentoForm.get('rua').valid && apartamentoForm.get('rua').touched\\\">Rua</span>\\n                </mat-error>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Número\\\" formControlName=\\\"numero\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error>\\n                  <span *ngIf=\\\"!apartamentoForm.get('numero').valid && apartamentoForm.get('numero').touched\\\">Número</span>\\n                </mat-error>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field>\\n                <mat-label>Bairro</mat-label>\\n                <mat-select formControlName=\\\"endereco\\\">\\n                  <mat-option  *ngFor=\\\"let endereco of enderecos\\\" [value]=\\\"endereco\\\">\\n                    {{endereco.bairro}}   \\n                    -\\n                    {{endereco.cidade}}    \\n                    ({{endereco.siglaestado}})                \\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n            <mat-checkbox (click)='toggleDisable()'>Outro: </mat-checkbox> \\n                        \\n            <input [disabled]='disableTextbox'>\\n\\n        </mat-grid-tile>\\n        \\n    </mat-grid-list>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n            <mat-checkbox formControlName=\\\"portaria24h\\\">Portaria 24 horas</mat-checkbox>   \\n        </mat-grid-tile>\\n\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n        <mat-checkbox formControlName=\\\"armario_embutido\\\">Armário Embutido</mat-checkbox> \\n        </mat-grid-tile>\\n    </mat-grid-list>\\n\\n      \\n\\n\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!apartamentoForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApartamentoService } from '../apartamento.service';\n\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport {Endereco} from '../../../../models/Endereco';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n\n@Component({\n  selector: 'app-apartamento-create',\n  templateUrl: './apartamento-create.component.html',\n  styleUrls: ['./apartamento-create.component.css']\n})\nexport class ApartamentoCreateComponent implements OnInit {\n\n  //enderecos:Endereco[];\n  enderecos:any;\n  apartamentoForm: FormGroup;\n  quartos: Number;\n  suites: Number;\n  sala_estar: Number;\n  sala_jantar:Number;\n  vagas:Number;\n  area:Number;\n  armario_embutido:Boolean;\n  descricao:String;\n  andar:String;\n  valorcondominio:Number;\n  valoraluguel:Number;\n  portaria24h:Boolean;\n  rua:String;\n  numero:String;\n  apto:String;\n  endereco:{\n    bairro:String,\n    cidade:String,\n    estado:String,\n  }\n\n  disableTextbox =  true;\n  toggleDisable() {\n    this.disableTextbox = !this.disableTextbox;\n  }\n\n  constructor(private router: Router, private apartamentoService: ApartamentoService,\n     private formBuilder: FormBuilder,private enderecoService:EnderecoService) { \n      //this.findByNomeEndereco();\n      //this.findByEndereco();\n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n      //console.log(\"End\"+this.enderecos);\n     }\n\n  ngOnInit() {\n    this.apartamentoForm = this.formBuilder.group({\n      'quartos' : [null, Validators.required],\n      'suites' : [null, Validators.required],\n      'sala_estar' : [null, Validators.required],\n      'sala_jantar' : [null, Validators.required],\n      'vagas' : [null, Validators.required],\n      'area' : [null, Validators.required],\n      'armario_embutido' : [null, Validators],\n      'descricao' : [null, Validators.required],\n      'andar' : [null, Validators.required],\n      'valorcondominio' : [null, Validators.required],\n      'portaria24h' : [null, Validators],\n      'endereco' : [null, Validators],\n      'valoraluguel' : [null, Validators.required],\n      'numero' : [null, Validators.required],\n      'rua' : [null, Validators.required],\n      'apto' : [null, Validators.required]\n    });\n    \n  }\n  findByEndereco(){\n  this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(\"Endereco\"+res);\n        this.enderecos = res;\n      }, err => {\n        console.log(\"Erro\"+err);\n      });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.apartamentoService.postApartamento(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/apartamento-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/apartamentos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n\\n  \\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-content>\\n    <dl>\\n      <dt>Qntd. quartos: {{apartamento.quartos}}</dt>\\n      <dt>Qntd. suítes: {{apartamento.suites}}</dt>\\n      <dt>Qntd. de salas de Estar: {{apartamento.sala_estar}}</dt>\\n      <dt>Qntd. de salas de Jantar: {{apartamento.sala_jantar}}</dt>\\n      <dt>Nro de vagas na garagem: {{apartamento.vagas}}</dt>\\n      <dt>Área (em metros quadrados): {{apartamento.area}}</dt>\\n      <dt>Possui armário embutido: {{getBoolValue(apartamento.armario_embutido)}}</dt>\\n      <dt>Descrição: </dt>\\n      <dd>{{apartamento.descricao}}</dd>\\n      <dt>Andar: {{apartamento.andar}}º andar (Apto {{apartamento.apto}})</dt>\\n      <dt>Valor do condomínio: R$ {{apartamento.valorcondominio}}</dt>\\n      <dt>Portaria 24 horas: {{getBoolValue(apartamento.portaria24h)}}</dt>\\n\\n      <dt>Endereço Completo: {{apartamento.rua}},{{apartamento.numero}}</dt>\\n      <dt>Bairro: {{apartamento.endereco.bairro}}</dt>\\n      <dt>Cidade: {{apartamento.endereco.cidade}}-{{apartamento.endereco.siglaestado}}</dt>\\n      <dt>Valor do aluguel: R$ {{apartamento.valoraluguel}}</dt>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/apartamento-edit', apartamento._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteApartamento(apartamento._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit, SimpleChange } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApartamentoService } from '../apartamento.service';\n\n@Component({\n  selector: 'app-apartamento-detail',\n  templateUrl: './apartamento-detail.component.html',\n  styleUrls: ['./apartamento-detail.component.css']\n})\nexport class ApartamentoDetailComponent implements OnInit {\n\n  apartamento = {};\n\n  constructor(private route: ActivatedRoute, private apartamentoService: ApartamentoService, private router: Router) { }\n\n  ngOnInit() {\n    this.getApartamentoDetails(this.route.snapshot.params['id']);\n  }\n\n  getApartamentoDetails(id) {\n    this.apartamentoService.getApartamento(id)\n      .subscribe(data => {\n        console.log(data);\n        this.apartamento = data;\n      }   );\n      console.log(this.apartamento);\n  }\n\n  deleteApartamento(id) {\n    this.apartamentoService.deleteApartamento(id)\n      .subscribe(res => {\n          this.router.navigate(['/apartamentos']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  getBoolValue(bool:Boolean){\n    if(bool==true){\n      return \"Sim\"\n    }else\n      return \"Não\"\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/apartamentos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"apartamentoForm\\\" (ngSubmit)=\\\"onFormSubmit(apartamentoForm.value)\\\">    \\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Quartos\\\" formControlName=\\\"quartos\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('quartos').valid && apartamentoForm.get('quartos').touched\\\">Quantidade de Quartos</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Suites\\\" formControlName=\\\"suites\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('suites').valid && apartamentoForm.get('suites').touched\\\">Quantidade de Suítes</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sala_estar\\\" formControlName=\\\"sala_estar\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('sala_estar').valid && apartamentoForm.get('sala_estar').touched\\\">Quantidade de Salas de Estar</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sala_jantar\\\" formControlName=\\\"sala_jantar\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('sala_jantar').valid && apartamentoForm.get('sala_jantar').touched\\\">Quantidade de Salas de Jantar</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Vagas\\\" formControlName=\\\"vagas\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('vagas').valid && apartamentoForm.get('vagas').touched\\\">Quantidade de Vagas</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n      <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Andar\\\" formControlName=\\\"andar\\\"\\n                     [errorStateMatcher]=\\\"matcher\\\">\\n              <mat-error>\\n                <span *ngIf=\\\"!apartamentoForm.get('andar').valid && apartamentoForm.get('andar').touched\\\">Andar</span>\\n              </mat-error>\\n            </mat-form-field>\\n      </mat-grid-tile>\\n      <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Apto\\\" formControlName=\\\"apto\\\"\\n                     [errorStateMatcher]=\\\"matcher\\\">\\n              <mat-error>\\n                <span *ngIf=\\\"!apartamentoForm.get('apto').valid && apartamentoForm.get('apto').touched\\\">Apto</span>\\n              </mat-error>\\n            </mat-form-field>\\n      </mat-grid-tile>\\n  </mat-grid-list>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Valor Condomíniio\\\" formControlName=\\\"valorcondominio\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('valorcondominio').valid && apartamentoForm.get('valorcondominio').touched\\\">Valor do Condomínio</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('area').valid && apartamentoForm.get('area').touched\\\">Área (em metros quadrados)</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Valor do imóvel\\\" formControlName=\\\"valoraluguel\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!apartamentoForm.get('valoraluguel').valid && apartamentoForm.get('valoraluguel').touched\\\">Valor do aluguel</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Descricao\\\" formControlName=\\\"descricao\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!apartamentoForm.get('descricao').valid && apartamentoForm.get('descricao').touched\\\">Descrição</span>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"50px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field>\\n                <mat-label>Bairro</mat-label>\\n                <mat-select formControlName=\\\"endereco\\\">\\n                  <mat-option  *ngFor=\\\"let endereco of enderecos\\\" [value]=\\\"endereco\\\">\\n                    {{endereco.bairro}}\\n                    -\\n                    {{endereco.cidade}}      \\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n            <mat-checkbox formControlName=\\\"armario_embutido\\\">Armário Embutido</mat-checkbox>   \\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n          <mat-checkbox formControlName=\\\"portaria24h\\\">Portaria 24 horas</mat-checkbox>   \\n      </mat-grid-tile>\\n    </mat-grid-list>\\n\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!apartamentoForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApartamentoService } from '../apartamento.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n@Component({\n  selector: 'app-apartamento-edit',\n  templateUrl: './apartamento-edit.component.html',\n  styleUrls: ['./apartamento-edit.component.css']\n})\nexport class ApartamentoEditComponent implements OnInit {\n  \n  apartamentoForm: FormGroup;\n  enderecos:any;\n  id:string = '';\n  quartos: number;\n  suites: number;\n  sala_estar: number;\n  sala_jantar:Number;\n  vagas:number;\n  area:number;\n  armario_embutido:boolean;\n  andar:String;\n  valorcondominio:Number;\n  valoraluguel:Number;\n  portaria24h:Boolean;\n  descricao:string;\n  numero:String;\n  rua:String;\n  apto:String;\n  endereco:{\n    bairro:string,\n    cidade:string,\n    estado:string,  }\n\n  constructor(private router: Router, private route: ActivatedRoute,\n     private apartamentoService: ApartamentoService, private formBuilder: FormBuilder,\n     private enderecoService:EnderecoService) { \n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n     }\n\n  ngOnInit() {\n    this.getApartamento(this.route.snapshot.params['id']);\n    this.apartamentoForm = this.formBuilder.group({\n      'quartos' : [null, Validators.required],\n      'suites' : [null, Validators.required],\n      'sala_estar' : [null, Validators.required],\n      'sala_jantar' : [null, Validators.required],\n      'vagas' : [null, Validators.required],\n      'area' : [null, Validators.required],\n      'armario_embutido' : [null, Validators.required],\n      'descricao' : [null, Validators.required],\n      'andar' : [null, Validators.required],\n      'valorcondominio' : [null, Validators.required],\n      'portaria24h' : [null, Validators.required],\n      'endereco' : [null, Validators.required],\n      'valoraluguel' : [null, Validators.required],\n      'rua' : [null, Validators.required],\n      'numero' : [null, Validators.required],\n      'apto' : [null, Validators.required]\n    });\n  }\n\n  getApartamento(id) {\n    this.apartamentoService.getApartamento(id).subscribe(data => {\n      this.id = data._id;\n      this.apartamentoForm.setValue({\n        quartos: data.quarto,\n        suites: data.suite,\n        sala_estar: data.sala_estar,\n        vagas:data.vagas,\n        area:data.area,\n        armario_embutido:data.armario_embutido,\n        descricao:data.descricao,\n        endereco:data.endereco,\n        sala_jantar:data.sala_jantar,\n        andar:data.andar,\n        valorcondominio:data.valorcondominio,\n        portaria24h:data.portaria24h,\n        valoraluguel:data.valoraluguel,\n        numero:data.numero,\n        rua:data.rua\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.apartamentoService.updateApartamento(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/apartamento-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  apartamentoDetails() {\n    this.router.navigate(['/apartamento-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/apartamento-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"bairro\\\">\\n        <th mat-header-cell *matHeaderCellDef> Bairro </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endereco.bairro}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"quartos\\\">\\n      <th mat-header-cell *matHeaderCellDef> Quartos</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" > {{element.quartos}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"suites\\\">\\n      <th mat-header-cell *matHeaderCellDef> Suites </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.suites}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"vagas\\\">\\n      <th mat-header-cell *matHeaderCellDef> Vagas </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vagas}} </td>\\n    </ng-container>   \\n\\n    <ng-container matColumnDef=\\\"valoraluguel\\\">\\n      <th mat-header-cell *matHeaderCellDef> Valor do aluguel </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.valoraluguel}} </td>\\n    </ng-container>   \\n\\n    <ng-container matColumnDef=\\\"valorcondominio\\\">\\n      <th mat-header-cell *matHeaderCellDef> Valor do condomínio </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.valorcondominio}} </td>\\n    </ng-container>   \\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/apartamento-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApartamentoService } from '../apartamento.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-apartamento-list',\n  templateUrl: './apartamento-list.component.html',\n  styleUrls: ['./apartamento-list.component.css']\n})\nexport class ApartamentoListComponent implements OnInit {\n\n\n  apartamentos: any;\n  displayedColumns = ['quartos', 'suites', 'vagas','bairro','valoraluguel','valorcondominio'];\n  dataSource = new ApartamentoDataSource(this.apartamentoService);\n\n  constructor(private apartamentoService: ApartamentoService) { }\n\n  ngOnInit() {\n    this.apartamentoService.getApartamentos()\n      .subscribe(res => {\n        console.log(res);\n        this.apartamentos = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class ApartamentoDataSource extends DataSource<any> {\n  constructor(private apartamentoService: ApartamentoService) {\n    super()\n  }\n\n  connect() {\n    return this.apartamentoService.getApartamentos();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apiapartamento\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApartamentoService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getApartamentos(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getApartamento(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postApartamento(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateApartamento(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteApartamento(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getBooks(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getBook(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postBook(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateBook(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteBook(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n<app-dashboard></app-dashboard>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookListComponent } from './book/book-list/book-list.component';\nimport { BookDetailComponent } from './book/book-detail/book-detail.component';\nimport { BookCreateComponent } from './book/book-create/book-create.component';\nimport { BookEditComponent } from './book/book-edit/book-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { EnderecoListComponent } from './endereco/endereco-list/endereco-list.component';\nimport { EnderecoCreateComponent } from './endereco/endereco-create/endereco-create.component';\nimport { EnderecoDetailComponent } from './endereco/endereco-detail/endereco-detail.component';\nimport { EnderecoEditComponent } from './endereco/endereco-edit/endereco-edit.component';\n\nimport { InicioComponent } from './inicio/inicio.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\n\nimport { CasaListComponent } from './casa/casa-list/casa-list.component';\nimport { CasaCreateComponent } from './casa/casa-create/casa-create.component';\nimport { CasaDetailComponent } from './casa/casa-detail/casa-detail.component';\nimport { CasaEditComponent } from './casa/casa-edit/casa-edit.component';\n\nimport { ApartamentoListComponent } from './apartamento/apartamento-list/apartamento-list.component';\nimport { ApartamentoCreateComponent } from './apartamento/apartamento-create/apartamento-create.component';\nimport { ApartamentoDetailComponent } from './apartamento/apartamento-detail/apartamento-detail.component';\nimport { ApartamentoEditComponent } from './apartamento/apartamento-edit/apartamento-edit.component';\n\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  //novos\n  MatToolbarModule,  \n  MatSidenavModule, \n  MatGridListModule,  \n  MatMenuModule} from \"@angular/material\";\n\nimport {MatRadioModule} from '@angular/material/radio';  \nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatListModule} from '@angular/material/list';\nimport {ListboxModule} from 'primeng/listbox';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {ButtonModule} from 'primeng/button';\nimport {AccordionModule} from 'primeng/accordion'; \n\n\n\n\nconst appRoutes: Routes = [\n  {\n    path: 'books',\n    component: BookListComponent,\n    data: { title: 'Book List' }\n  },\n  {\n    path: 'book-details/:id',\n    component: BookDetailComponent,\n    data: { title: 'Book Details' }\n  },\n  {\n    path: 'book-create',\n    component: BookCreateComponent,\n    data: { title: 'Create Book' }\n  },\n  {\n    path: 'book-edit/:id',\n    component: BookEditComponent,\n    data: { title: 'Edit Book' }\n  },\n  { path: '',\n    redirectTo: '/inicio',\n    pathMatch: 'full'\n  },\n  { path: 'inicio',\n    component: InicioComponent,\n    data: { title: 'Inicio' }\n  },\n  {\n    path: 'enderecos',\n    component: EnderecoListComponent,\n    data: { title: 'Endereco List' }\n  },\n  {\n    path: 'inicio',\n    component: InicioComponent,\n    data: { title: 'Inicio' }\n  },\n  {\n    path: 'endereco-create',\n    component: EnderecoCreateComponent,\n    data: { title: 'Create Endereco' }\n  },\n  {\n    path: 'endereco-edit/:id',\n    component: EnderecoEditComponent,\n    data: { title: 'Edit Endereco' }\n  },\n  {\n    path: 'endereco-details/:id',\n    component: EnderecoDetailComponent,\n    data: { title: 'Endereco Details' }\n  },\n  {\n    path: 'casa-create',\n    component: CasaCreateComponent,\n    data: { title: 'Create Casa' }\n  },\n  {\n    path: 'casas',\n    component: CasaListComponent,\n    data: { title: 'Casa List' }\n  },\n  {\n    path: 'casa-details/:id',\n    component: CasaDetailComponent,\n    data: { title: 'Casa Details' }\n  },\n  {    \n    path: 'casa-edit/:id',\n    component: CasaEditComponent,\n    data: { title: 'Edit Casa'  }\n  },\n\n  {\n    path: 'apartamento-create',\n    component: ApartamentoCreateComponent,\n    data: { title: 'Create Apartamento' }\n  },\n  {\n    path: 'apartamentos',\n    component: ApartamentoListComponent,\n    data: { title: 'Apartamento List' }\n  },\n  {\n    path: 'apartamento-details/:id',\n    component: ApartamentoDetailComponent,\n    data: { title: 'Apartamento Details' }\n  },\n  {    \n    path: 'apartamento-edit/:id',\n    component: ApartamentoEditComponent,\n    data: { title: 'Edit Apartamento'  }\n  }\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookListComponent,\n    BookDetailComponent,\n    BookCreateComponent,\n    BookEditComponent,\n    EnderecoListComponent,\n    InicioComponent,\n    DashboardComponent,\n    EnderecoCreateComponent,\n    EnderecoDetailComponent,\n    EnderecoEditComponent,\n    CasaListComponent,\n    CasaCreateComponent,\n    CasaDetailComponent,\n    CasaEditComponent,\n    ApartamentoListComponent,\n    ApartamentoCreateComponent,\n    ApartamentoDetailComponent,\n    ApartamentoEditComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatListModule,\n    ListboxModule,\n    DropdownModule,\n    //novos\n    MatToolbarModule,  \n    MatSidenavModule, \n    MatGridListModule,  \n    MatMenuModule,\n    ButtonModule,\n    AccordionModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatRadioModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('isbn').valid && bookForm.get('isbn').touched\\\">Please enter ISBN</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('title').valid && bookForm.get('title').touched\\\">Please enter Book Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('author').valid && bookForm.get('author').touched\\\">Please enter Book Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('description').valid && bookForm.get('description').touched\\\">Please enter Book Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('publisher').valid && bookForm.get('publisher').touched\\\">Please enter Publisher</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('published_year').valid && bookForm.get('published_year').touched\\\">Please enter Published Year</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../api.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.css']\n})\nexport class BookCreateComponent implements OnInit {\n\n  bookForm: FormGroup;\n  isbn:string='';\n  title:string='';\n  description:string='';\n  author:string='';\n  publisher:string='';\n  published_year:string='';\n\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.bookForm = this.formBuilder.group({\n      'isbn' : [null, Validators.required],\n      'title' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'author' : [null, Validators.required],\n      'publisher' : [null, Validators.required],\n      'published_year' : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.postBook(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/book-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title><h2>{{book.title}}</h2></mat-card-title>\\n    <mat-card-subtitle>{{book.description}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <dl>\\n      <dt>ISBN:</dt>\\n      <dd>{{book.isbn}}</dd>\\n      <dt>Author:</dt>\\n      <dd>{{book.author}}</dd>\\n      <dt>Publisher:</dt>\\n      <dd>{{book.publisher}}</dd>\\n      <dt>Publish Year:</dt>\\n      <dd>{{book.published_year}}</dd>\\n      <dt>Update Date:</dt>\\n      <dd>{{book.updated_date | date}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-edit', book._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteBook(book._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../../api.service';\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.css']\n})\nexport class BookDetailComponent implements OnInit {\n\n  book = {};\n\n  constructor(private route: ActivatedRoute, private api: ApiService, private router: Router) { }\n\n  ngOnInit() {\n    this.getBookDetails(this.route.snapshot.params['id']);\n  }\n\n  getBookDetails(id) {\n    this.api.getBook(id)\n      .subscribe(data => {\n        console.log(data);\n        this.book = data;\n      }   );\n      console.log(\"oi\"+this.book);\n  }\n\n  deleteBook(id) {\n    this.api.deleteBook(id)\n      .subscribe(res => {\n          this.router.navigate(['/books']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"bookDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('isbn').valid && bookForm.get('isbn').touched\\\">Please enter ISBN</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('title').valid && bookForm.get('title').touched\\\">Please enter Book Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('author').valid && bookForm.get('author').touched\\\">Please enter Book Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('description').valid && bookForm.get('description').touched\\\">Please enter Book Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('publisher').valid && bookForm.get('publisher').touched\\\">Please enter Publisher</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('published_year').valid && bookForm.get('published_year').touched\\\">Please enter Published Year</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent implements OnInit {\n\n  bookForm: FormGroup;\n  id:string = '';\n  isbn:string = '';\n  title:string = '';\n  description:string = '';\n  author:string = '';\n  publisher:string = '';\n  published_year:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getBook(this.route.snapshot.params['id']);\n    this.bookForm = this.formBuilder.group({\n      'isbn' : [null, Validators.required],\n      'title' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'author' : [null, Validators.required],\n      'publisher' : [null, Validators.required],\n      'published_year' : [null, Validators.required]\n    });\n  }\n\n  getBook(id) {\n    this.api.getBook(id).subscribe(data => {\n      this.id = data._id;\n      this.bookForm.setValue({\n        isbn: data.isbn,\n        title: data.title,\n        description: data.description,\n        author: data.author,\n        publisher: data.publisher,\n        published_year: data.published_year\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.updateBook(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/book-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  bookDetails() {\n    this.router.navigate(['/book-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"isbn\\\">\\n      <th mat-header-cell *matHeaderCellDef> ISBN </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.isbn}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"author\\\">\\n      <th mat-header-cell *matHeaderCellDef> Author </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/book-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n\n  books: any;\n  displayedColumns = ['isbn', 'title', 'author'];\n  dataSource = new BookDataSource(this.api);\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    this.api.getBooks()\n      .subscribe(res => {\n        console.log(res);\n        this.books = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class BookDataSource extends DataSource<any> {\n  constructor(private api: ApiService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getBooks();\n  }\n\n  disconnect() {\n\n  }\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"casaForm\\\" (ngSubmit)=\\\"onFormSubmit(casaForm.value)\\\">    \\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Quartos\\\" formControlName=\\\"quartos\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('quartos').valid && casaForm.get('quartos').touched\\\">Quantidade de Quartos</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Suites\\\" formControlName=\\\"suites\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('suites').valid && casaForm.get('suites').touched\\\">Quantidade de Suítes</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sala de estar\\\" formControlName=\\\"sala_estar\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('sala_estar').valid && casaForm.get('sala_estar').touched\\\">Quantidade de Salas de Estar</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Vagas\\\" formControlName=\\\"vagas\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('vagas').valid && casaForm.get('vagas').touched\\\">Quantidade de Vagas</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('area').valid && casaForm.get('area').touched\\\">Área (em metros quadrados)</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Valor do aluguel\\\" formControlName=\\\"valoraluguel\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!casaForm.get('valoraluguel').valid && casaForm.get('valoraluguel').touched\\\">Valor do aluguel</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Descricao\\\" formControlName=\\\"descricao\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!casaForm.get('descricao').valid && casaForm.get('descricao').touched\\\">Descrição</span>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Rua\\\" formControlName=\\\"rua\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error>\\n                  <span *ngIf=\\\"!casaForm.get('rua').valid && casaForm.get('rua').touched\\\">Rua</span>\\n                </mat-error>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Número\\\" formControlName=\\\"numero\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error>\\n                  <span *ngIf=\\\"!casaForm.get('numero').valid && casaForm.get('numero').touched\\\">Número</span>\\n                </mat-error>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <mat-form-field>\\n                <mat-label>Bairro</mat-label>\\n                <mat-select formControlName=\\\"endereco\\\">\\n                  <mat-option  *ngFor=\\\"let endereco of enderecos\\\" [value]=\\\"endereco\\\">\\n                    {{endereco.bairro}}\\n                    -\\n                    {{endereco.cidade}}  \\n                    ({{endereco.siglaestado}})       \\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n\\n            <mat-checkbox (click)='toggleDisable()'>Outro: </mat-checkbox> \\n                        \\n            <input [disabled]='disableTextbox'>\\n          \\n        </mat-grid-tile>\\n    </mat-grid-list>\\n    <mat-checkbox formControlName=\\\"armario_embutido\\\">Armário Embutido</mat-checkbox>   \\n\\n    \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!casaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\\n<!--\\n  <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Outro: </mat-checkbox>      \\n            <mat-checkbox class=\\\"example-margin\\\" [labelPosition]=\\\"labelPosition\\\" [disabled]=\\\"disabled\\\"> I'm a checkbox </mat-checkbox>\\n         \\n-->\\n\\n\\n\\n    \\n      \\n       \\n    \\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CasaService } from '../casa.service';\n\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport {Endereco} from '../../../../models/Endereco';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\nexport class Page<T> {\n\n  totalElements: number;\n  content: T[];\n  last: boolean;\n\n}\n@Component({\n  selector: 'app-casa-create',\n  templateUrl: './casa-create.component.html',\n  styleUrls: ['./casa-create.component.css']\n})\n\nexport class CasaCreateComponent implements OnInit {\n\n  checked = false;\n  indeterminate = false;\n  labelPosition = 'after';\n  disabled = false;\n\n  //enderecos:Endereco[];\n  enderecos:any;\n  casaForm: FormGroup;\n  enableForm: FormGroup;\n  quartos: Number;\n  suites: Number;\n  sala_estar: Number;\n  vagas:Number;\n  area:Number;\n  valoraluguel:Number;\n  armario_embutido:Boolean;\n  descrição:String;\n  rua:String;\n  numero:String;\n  \n  endereco:{\n    bairro:String,\n    cidade:String,\n    estado:String,\n  }\n\n  disableTextbox =  true;\n  toggleDisable() {\n    this.disableTextbox = !this.disableTextbox;\n  }\n\n  @Input() outrobairro: String;\n\n  constructor(private router: Router, private casaService: CasaService,\n     private formBuilder: FormBuilder,private enderecoService:EnderecoService) { \n      //this.findByNomeEndereco();\n      //this.findByEndereco();\n      \n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n      //console.log(\"End\"+this.enderecos);\n     }\n\n  ngOnInit() {\n    //this.disableTextbox=false;\n    this.casaForm = this.formBuilder.group({\n      'quartos' : [null, Validators.required],\n      'suites' : [null, Validators.required],\n      'sala_estar' : [null, Validators.required],\n      'vagas' : [null, Validators.required],\n      'area' : [null, Validators.required],\n      'armario_embutido' : [null, Validators],\n      'descricao' : [null, Validators.required],\n      'valoraluguel' : [null, Validators.required],\n      'endereco' : [null, Validators],\n      'numero' : [null, Validators.required],\n      'rua' : [null, Validators.required],\n      'outrobairro' : [null, Validators]\n    });\n\n    \n\n  }\n  findByEndereco(){\n  this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(\"Endereco\"+res);\n        this.enderecos = res;\n      }, err => {\n        console.log(\"Erro\"+err);\n      });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.casaService.postCasa(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/casa-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casas']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-content>\\n    <dl>\\n      <dt>Qtd. quartos: {{casa.quartos}}</dt>\\n      <dt>Qtd. suítes: {{casa.suites}}</dt>\\n      <dt>Qtd. salas de estar: {{casa.sala_estar}}</dt>\\n      <dt>Nro de vagas na garagem: {{casa.vagas}}</dt>\\n      <dt>Área (em metros quadrados): {{casa.area}}</dt>\\n      <dt>Possui armário embutido: {{getBoolValue(casa.armario_embutido)}}</dt>      \\n      <dt>Descrição: </dt>\\n      <dd>{{casa.descricao}}</dd>\\n      <dt>Endereço Completo:</dt>\\n      <dt>{{casa.rua}},{{casa.numero}}</dt>\\n      <dt>Bairro: {{casa.endereco.bairro}}</dt>\\n      <dt>Cidade: {{casa.endereco.cidade}}-{{casa.endereco.siglaestado}}</dt>\\n      <dt>Valor do aluguel: R$ {{casa.valoraluguel}}</dt>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casa-edit', casa._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteCasa(casa._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CasaService } from '../casa.service';\n\n@Component({\n  selector: 'app-casa-detail',\n  templateUrl: './casa-detail.component.html',\n  styleUrls: ['./casa-detail.component.css']\n})\nexport class CasaDetailComponent implements OnInit {\n\n  casa = {};\n\n  constructor(private route: ActivatedRoute, private casaService: CasaService, private router: Router) { }\n\n  ngOnInit() {\n    this.getCasaDetails(this.route.snapshot.params['id']);\n  }\n\n  getCasaDetails(id) {\n    this.casaService.getCasa(id)\n      .subscribe(data => {\n        console.log(data);\n        this.casa = data;\n      }   );\n      console.log(this.casa);\n  }\n\n  deleteCasa(id) {\n    this.casaService.deleteCasa(id)\n      .subscribe(res => {\n          this.router.navigate(['/casas']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  getBoolValue(bool:Boolean){\n    if(bool==true){\n      return \"Sim\"\n    }else\n      return \"Não\"\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"casaDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"casaForm\\\" (ngSubmit)=\\\"onFormSubmit(casaForm.value)\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Quartos\\\" formControlName=\\\"quartos\\\"\\n               [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-error>\\n          <span *ngIf=\\\"!casaForm.get('quartos').valid && casaForm.get('quartos').touched\\\">Quantidade de Quartos</span>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Suites\\\" formControlName=\\\"suites\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('suites').valid && casaForm.get('suites').touched\\\">Quantidade de Suítes</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Sala_estar\\\" formControlName=\\\"sala_estar\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('sala_estar').valid && casaForm.get('sala_estar').touched\\\">Quantidade de Salas de Estar</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Vagas\\\" formControlName=\\\"vagas\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('vagas').valid && casaForm.get('vagas').touched\\\">Quantidade de Vagas</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('area').valid && casaForm.get('area').touched\\\">Área</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Valor do aluguel\\\" formControlName=\\\"valoraluguel\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!casaForm.get('valoraluguel').valid && casaForm.get('valoraluguel').touched\\\">Valor do Aluguel</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Descricao\\\" formControlName=\\\"descricao\\\"\\n                   [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n              <span *ngIf=\\\"!casaForm.get('descricao').valid && casaForm.get('descricao').touched\\\">Descrição</span>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n              <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Rua\\\" formControlName=\\\"rua\\\"\\n                             [errorStateMatcher]=\\\"matcher\\\">\\n                      <mat-error>\\n                        <span *ngIf=\\\"!casaForm.get('rua').valid && casaForm.get('rua').touched\\\">Rua</span>\\n                      </mat-error>\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n              <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Número\\\" formControlName=\\\"numero\\\"\\n                             [errorStateMatcher]=\\\"matcher\\\">\\n                      <mat-error>\\n                        <span *ngIf=\\\"!casaForm.get('numero').valid && casaForm.get('numero').touched\\\">Número</span>\\n                      </mat-error>\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"50px\\\">\\n            <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n                <mat-form-field>\\n                    <mat-label>Bairro</mat-label>\\n                    <mat-select formControlName=\\\"endereco\\\">\\n                      <mat-option  *ngFor=\\\"let endereco of enderecos\\\" [value]=\\\"endereco\\\">\\n                        {{endereco.bairro}}\\n                        -\\n                        {{endereco.cidade}}      \\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n            </mat-grid-tile>\\n            <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n                <mat-checkbox formControlName=\\\"armario_embutido\\\">Armário Embutido</mat-checkbox>   \\n            </mat-grid-tile>\\n        </mat-grid-list>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!casaForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CasaService } from '../casa.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport{EnderecoService} from '../../endereco/endereco.service';\n\n@Component({\n  selector: 'app-casa-edit',\n  templateUrl: './casa-edit.component.html',\n  styleUrls: ['./casa-edit.component.css']\n})\nexport class CasaEditComponent implements OnInit {\n  \n  casaForm: FormGroup;\n  enderecos:any;\n  id:string = '';\n  quartos: number;\n  suites: number;\n  sala_estar: number;\n  vagas:number;\n  area:number;\n  armario_embutido:boolean;\n  valoraluguel:Number;\n  descricao:string;\n  rua:String;\n  numero:String;\n  endereco:{\n    bairro:string,\n    cidade:string,\n    estado:string,  }\n\n  constructor(private router: Router, private route: ActivatedRoute,\n     private casaService: CasaService, private formBuilder: FormBuilder,\n     private enderecoService:EnderecoService) { \n      this.enderecoService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n     }\n\n  ngOnInit() {\n    this.getCasa(this.route.snapshot.params['id']);\n    this.casaForm = this.formBuilder.group({\n      'quartos' : [null, Validators.required],\n      'suites' : [null, Validators.required],\n      'sala_estar' : [null, Validators.required],\n      'vagas' : [null, Validators.required],\n      'area' : [null, Validators.required],\n      'armario_embutido' : [null, Validators.required],\n      'descricao' : [null, Validators.required],\n      'endereco' : [null, Validators.required],\n      'valoraluguel' : [null, Validators.required],\n      'numero' : [null, Validators.required],\n      'rua' : [null, Validators.required]\n    });\n  }\n\n  getCasa(id) {\n    this.casaService.getCasa(id).subscribe(data => {\n      this.id = data._id;\n      this.casaForm.setValue({\n        quartos: data.quarto,\n        suites: data.suite,\n        sala_estar: data.sala_estar,\n        vagas:data.vagas,\n        area:data.area,\n        armario_embutido:data.armario_embutido,\n        descricao:data.descricao,\n        endereco:data.endereco,\n        valoraluguel:data.valoraluguel\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.casaService.updateCasa(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/casa-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  casaDetails() {\n    this.router.navigate(['/casa-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/casa-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"bairro\\\">\\n        <th mat-header-cell *matHeaderCellDef> Bairro </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endereco.bairro}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"quartos\\\">\\n      <th mat-header-cell *matHeaderCellDef> Quartos</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" > {{element.quartos}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"suites\\\">\\n      <th mat-header-cell *matHeaderCellDef> Suites </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.suites}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"vagas\\\">\\n      <th mat-header-cell *matHeaderCellDef> Vagas </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vagas}} </td>\\n    </ng-container>   \\n\\n    <ng-container matColumnDef=\\\"valoraluguel\\\">\\n      <th mat-header-cell *matHeaderCellDef> Valor aluguel </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.valoraluguel}} </td>\\n    </ng-container>   \\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/casa-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CasaService } from '../casa.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-casa-list',\n  templateUrl: './casa-list.component.html',\n  styleUrls: ['./casa-list.component.css']\n})\nexport class CasaListComponent implements OnInit {\n\n\n  casas: any;\n  displayedColumns = ['quartos', 'suites', 'vagas','bairro','valoraluguel'];\n  dataSource = new CasaDataSource(this.casaService);\n\n  constructor(private casaService: CasaService) { }\n\n  ngOnInit() {\n    this.casaService.getCasas()\n      .subscribe(res => {\n        console.log(res);\n        this.casas = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class CasaDataSource extends DataSource<any> {\n  constructor(private casaService: CasaService) {\n    super()\n  }\n\n  connect() {\n    return this.casaService.getCasas();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apicasa\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CasaService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getCasas(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getCasa(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postCasa(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateCasa(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteCasa(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    \\n    \\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n   \\n    <mat-nav-list>\\n      <!--\\n      <a mat-list-item routerLink=\\\"/matiere\\\">Matiere</a>\\n      <a mat-list-item href=\\\"/second-page\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n      <a mat-list-item href=\\\"/pessoa\\\">Pessoa</a>      \\n      <a mat-list-item routerLink=\\\"/books\\\">Livros</a>\\n      -->\\n      <mat-icon  mat-list-item  routerLink=\\\"/inicio\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">home</mat-icon>\\n      <a mat-list-item routerLink=\\\"/casas\\\">Casas</a>\\n      <a mat-list-item routerLink=\\\"/enderecos\\\">Endereços</a>\\n      <a mat-list-item routerLink=\\\"/apartamentos\\\">Apartamentos</a>\\n\\n    </mat-nav-list>    \\n    <!--\\n    <mat-nav-list>\\n        <a mat-list-item routerLink=\\\"/reserva\\\">Reserva</a>\\n    </mat-nav-list>\\n    -->\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n\\n      </button>\\n      <span>Imobiliária</span>\\n\\n\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {tap} from \"rxjs/internal/operators\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n    \n\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/enderecos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"enderecoForm\\\" (ngSubmit)=\\\"onFormSubmit(enderecoForm.value)\\\">\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Bairro\\\" formControlName=\\\"bairro\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('bairro').valid && enderecoForm.get('bairro').touched\\\">Bairro</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Cidade\\\" formControlName=\\\"cidade\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('cidade').valid && enderecoForm.get('cidade').touched\\\">Cidade</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"estado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('estado').valid && enderecoForm.get('estado').touched\\\">Estado</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sigla Estado\\\" formControlName=\\\"siglaestado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('siglaestado').valid && enderecoForm.get('siglaestado').touched\\\">Sigla do Estado</span>\\n    </mat-error>\\n  </mat-form-field>\\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!enderecoForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EnderecoService } from '../endereco.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-endereco-create',\n  templateUrl: './endereco-create.component.html',\n  styleUrls: ['./endereco-create.component.css']\n})\nexport class EnderecoCreateComponent implements OnInit {\n\n  enderecoForm: FormGroup;\n  bairro:string='';\n  cidade:string='';\n  estado:string='';\n  siglaestado:string='';\n\n  constructor(private router: Router, private enderecoService: EnderecoService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.enderecoForm = this.formBuilder.group({\n      'bairro' : [null, Validators.required],\n      'cidade' : [null, Validators.required],\n      'estado' : [null, Validators.required],\n      'siglaestado' : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.enderecoService.postEndereco(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/endereco-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/enderecos']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  \\n  <mat-card-content>\\n    <dl>\\n      <dt>Bairro:</dt>\\n      <dd>{{endereco.bairro}}</dd>\\n      <dt>Cidade:</dt>\\n      <dd>{{endereco.cidade}}</dd>\\n      <dt>Estado:</dt>\\n      <dd>{{endereco.estado}}</dd>\\n      <dt>Sigla Estado:</dt>\\n      <dd>{{endereco.siglaestado}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/endereco-edit', endereco._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEndereco(endereco._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EnderecoService } from '../endereco.service';\n\n@Component({\n  selector: 'app-endereco-detail',\n  templateUrl: './endereco-detail.component.html',\n  styleUrls: ['./endereco-detail.component.css']\n})\nexport class EnderecoDetailComponent implements OnInit {\n\n  endereco = {};\n\n  constructor(private route: ActivatedRoute, private enderecoService: EnderecoService, \n    private router: Router) { }\n\n  ngOnInit() {\n    this.getEnderecoDetails(this.route.snapshot.params['id']);\n  }\n\n  getEnderecoDetails(id) {\n    this.enderecoService.getEndereco(id)\n      .subscribe(data => {\n        console.log(data);\n        this.endereco = data;\n      }   );\n      console.log(\"oi\"+this.endereco);\n  }\n\n  deleteEndereco(id) {\n    this.enderecoService.deleteEndereco(id)\n      .subscribe(res => {\n          this.router.navigate(['/enderecos']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"enderecoDetails()\\\"><mat-icon>show</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"enderecoForm\\\" (ngSubmit)=\\\"onFormSubmit(enderecoForm.value)\\\">\\n  \\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Bairro\\\" formControlName=\\\"bairro\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('bairro').valid && enderecoForm.get('bairro').touched\\\">Please enter Bairro</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Cidade\\\" formControlName=\\\"cidade\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('cidade').valid && enderecoForm.get('cidade').touched\\\">Please enter Endereco Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"estado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('estado').valid && enderecoForm.get('estado').touched\\\">Please enter Endereco Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Sigla Estado\\\" formControlName=\\\"siglaestado\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!enderecoForm.get('siglaestado').valid && enderecoForm.get('siglaestado').touched\\\">Please enter Endereco Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  \\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!enderecoForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EnderecoService } from '../endereco.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-endereco-edit',\n  templateUrl: './endereco-edit.component.html',\n  styleUrls: ['./endereco-edit.component.css']\n})\nexport class EnderecoEditComponent implements OnInit {\n\n  enderecoForm: FormGroup;\n  id:string = '';\n  bairro:string = '';\n  cidade:string = '';\n  estado:string = '';\n  siglaestado:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, \n    private enderecoService: EnderecoService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getEndereco(this.route.snapshot.params['id']);\n    this.enderecoForm = this.formBuilder.group({\n      'bairro' : [null, Validators.required],\n      'cidade' : [null, Validators.required],\n      'estado' : [null, Validators.required],\n      'siglaestado' : [null, Validators.required]\n    });\n  }\n\n  getEndereco(id) {\n    this.enderecoService.getEndereco(id).subscribe(data => {\n      this.id = data._id;\n      this.enderecoForm.setValue({\n        bairro: data.bairro,\n        cidade: data.cidade,\n        estado: data.estado,\n        siglaestado: data.siglaestado\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.enderecoService.updateEndereco(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/endereco-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  enderecoDetails() {\n    this.router.navigate(['/endereco-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/endereco-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"bairro\\\">\\n      <th mat-header-cell *matHeaderCellDef> Bairro </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bairro}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"cidade\\\">\\n      <th mat-header-cell *matHeaderCellDef> Cidade</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.cidade}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"estado\\\">\\n      <th mat-header-cell *matHeaderCellDef> Estado </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.estado}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"siglaestado\\\">\\n      <th mat-header-cell *matHeaderCellDef> Sigla Estado </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.siglaestado}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/endereco-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EnderecoService } from '../endereco.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-endereco-list',\n  templateUrl: './endereco-list.component.html',\n  styleUrls: ['./endereco-list.component.css']\n})\nexport class EnderecoListComponent implements OnInit {\n\n  enderecos: any;\n  displayedColumns = ['bairro', 'cidade', 'estado','siglaestado'];\n  dataSource = new EnderecoDataSource(this.apiService);\n\n  constructor(private apiService: EnderecoService ) { }\n\n  ngOnInit() {\n    this.apiService.getEnderecos()\n      .subscribe(res => {\n        console.log(res);\n        this.enderecos = res;\n      }, err => {\n        console.log(err);\n      });\n      \n  }\n}\n\nexport class EnderecoDataSource extends DataSource<any> {\n  constructor(private apiService: EnderecoService) {\n    super()\n  }\n\n  connect() {\n    return this.apiService.getEnderecos();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/apiendereco\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnderecoService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getEnderecos(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getEndereco(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postEndereco(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateEndereco(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteEndereco(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \"\\n/*sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: sticky;\\n  top: 0;\\n}*/\\n\\n/*.example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}*/\\n\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" >\\n            <div class=\\\"col-md-12 pad-10\\\">\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"goToAddEndereco()\\\">\\n                <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Cadastro de Endereço\\n                </button>\\n            </div>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n            <div class=\\\"col-md-12 pad-10\\\">\\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToAddCasa()\\\">\\n                    <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Cadastro de Casa\\n                    </button>\\n            </div>      \\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n            <div class=\\\"col-md-12 pad-10\\\">\\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToAddApartamento()\\\">\\n                    <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Cadastro de Apartamento\\n                    </button>\\n            </div>      \\n        </mat-grid-tile>\\n    </mat-grid-list>\\n<!--\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" [style.background]=\\\"'lightblue'\\\">\\n        <div class=\\\"col-md-12 pad-10\\\">\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"goToAddEndereco()\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Adicionar Endereço\\n            </button>\\n        </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\" [style.background]=\\\"'lightblue'\\\">\\n        <div class=\\\"col-md-12 pad-10\\\">\\n                <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToAddCasa()\\\">\\n                <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Adicionar Casa\\n                </button>\\n        </div>      \\n    </mat-grid-tile>\\n</mat-grid-list>\\n-->\\n<!--\\n<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n    <mat-grid-tile\\n        *ngFor=\\\"let tile of tiles\\\"\\n        [colspan]=\\\"tile.cols\\\"\\n        [rowspan]=\\\"tile.rows\\\"\\n        [style.background]=\\\"tile.color\\\">\\n      {{tile.text}}\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  -->\"","import { Component, OnInit } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport {Router} from \"@angular/router\";\nimport { map } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n\n  \n}\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  tiles: Tile[] = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)  );\n\n  constructor(private router: Router,private breakpointObserver: BreakpointObserver) { }\n\n  goToAddEndereco () {\n    this.router.navigateByUrl('/endereco-create');\n  }\n\n  goToAddCasa () {\n    this.router.navigateByUrl('/casa-create');\n  }\n\n  goToAddApartamento() {\n    this.router.navigateByUrl('/apartamento-create');\n  }\n\n  ngOnInit() {\n  }\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}